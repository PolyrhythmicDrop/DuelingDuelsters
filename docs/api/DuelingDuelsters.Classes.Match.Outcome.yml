### YamlMime:ManagedReference
items:
- uid: DuelingDuelsters.Classes.Match.Outcome
  commentId: T:DuelingDuelsters.Classes.Match.Outcome
  id: Match.Outcome
  parent: DuelingDuelsters.Classes
  children:
  - DuelingDuelsters.Classes.Match.Outcome.None
  - DuelingDuelsters.Classes.Match.Outcome.SwordClash
  - DuelingDuelsters.Classes.Match.Outcome.BothHit
  - DuelingDuelsters.Classes.Match.Outcome.P1Blocked
  - DuelingDuelsters.Classes.Match.Outcome.P2Blocked
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedBlock
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedBlock
  - DuelingDuelsters.Classes.Match.Outcome.BothBlock
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedDodge
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedDodge
  - DuelingDuelsters.Classes.Match.Outcome.P1Dodge
  - DuelingDuelsters.Classes.Match.Outcome.P2Dodge
  - DuelingDuelsters.Classes.Match.Outcome.P1DodgeBlock
  - DuelingDuelsters.Classes.Match.Outcome.P2DodgeBlock
  - DuelingDuelsters.Classes.Match.Outcome.P1BlockP2Dodge
  - DuelingDuelsters.Classes.Match.Outcome.P2BlockP1Dodge
  - DuelingDuelsters.Classes.Match.Outcome.DoubleDodge
  - DuelingDuelsters.Classes.Match.Outcome.P1HealP2Defend
  - DuelingDuelsters.Classes.Match.Outcome.P2HealP1Defend
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Defend
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Defend
  - DuelingDuelsters.Classes.Match.Outcome.P1HealP2Swing
  - DuelingDuelsters.Classes.Match.Outcome.P2HealP1Swing
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Swing
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Swing
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Heal
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Heal
  - DuelingDuelsters.Classes.Match.Outcome.DoubleFailedHeal
  - DuelingDuelsters.Classes.Match.Outcome.DoubleHeal
  - DuelingDuelsters.Classes.Match.Outcome.P1FailedCounter
  - DuelingDuelsters.Classes.Match.Outcome.P2FailedCounter
  - DuelingDuelsters.Classes.Match.Outcome.HealDodge
  - DuelingDuelsters.Classes.Match.Outcome.HealCounter
  langs:
  - csharp
  - vb
  name: Match.Outcome
  nameWithType: Match.Outcome
  fullName: DuelingDuelsters.Classes.Match.Outcome
  type: Enum
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Outcome
    path: src/Classes/Match.cs
    startLine: 82
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Available outcomes for a round. 

    <p>

    An <code>Outcome</code> is decided by a combination of each player's chosen <xref href="DuelingDuelsters.Classes.Player.Action?text=Action" data-throw-if-not-resolved="false"></xref> and random numbers generated by the <xref href="DuelingDuelsters.Classes.Match?text=Match" data-throw-if-not-resolved="false"></xref>'s <xref href="DuelingDuelsters.Classes.Match.rng" data-throw-if-not-resolved="false"></xref> member.

    </p> 

    <p>

    After the round <code>Outcome</code> is determined, it is used to get narration strings from the <xref href="DuelingDuelsters.Classes.Narrator" data-throw-if-not-resolved="false"></xref>, calculate damage, counters, and heals, and set the stage for the next round.

    </p>
  example: []
  syntax:
    content: public enum Match.Outcome
    content.vb: Public Enum Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.None
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.None
  id: None
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: None
  nameWithType: Match.Outcome.None
  fullName: DuelingDuelsters.Classes.Match.Outcome.None
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: None
    path: src/Classes/Match.cs
    startLine: 87
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The default action. The <code>Outcome</code> is reset to <code>None</code> at the start of the round.
  example: []
  syntax:
    content: None = 0
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.SwordClash
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.SwordClash
  id: SwordClash
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: SwordClash
  nameWithType: Match.Outcome.SwordClash
  fullName: DuelingDuelsters.Classes.Match.Outcome.SwordClash
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: SwordClash
    path: src/Classes/Match.cs
    startLine: 100
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> and <xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swing in the same direction.</td><td class="description">Neither player takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: SwordClash = 1
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.BothHit
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.BothHit
  id: BothHit
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: BothHit
  nameWithType: Match.Outcome.BothHit
  fullName: DuelingDuelsters.Classes.Match.Outcome.BothHit
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: BothHit
    path: src/Classes/Match.cs
    startLine: 113
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> and <xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swing in opposite directions.</td><td class="description">Both players take full damage and have a chance to crit.</td></tr></tbody></table>
  example: []
  syntax:
    content: BothHit = 2
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1Blocked
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1Blocked
  id: P1Blocked
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1Blocked
  nameWithType: Match.Outcome.P1Blocked
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1Blocked
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1Blocked
    path: src/Classes/Match.cs
    startLine: 134
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks in the same direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> is staggered.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1Blocked = 3
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2Blocked
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2Blocked
  id: P2Blocked
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2Blocked
  nameWithType: Match.Outcome.P2Blocked
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2Blocked
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2Blocked
    path: src/Classes/Match.cs
    startLine: 156
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks in the same direction.</li></ul>
       </td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> is staggered.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2Blocked = 4
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedBlock
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedBlock
  id: P1FailedBlock
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedBlock
  nameWithType: Match.Outcome.P1FailedBlock
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedBlock
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedBlock
    path: src/Classes/Match.cs
    startLine: 177
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks in the opposite direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1FailedBlock = 5
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedBlock
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedBlock
  id: P2FailedBlock
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedBlock
  nameWithType: Match.Outcome.P2FailedBlock
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedBlock
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedBlock
    path: src/Classes/Match.cs
    startLine: 198
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks in the opposite direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2FailedBlock = 6
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.BothBlock
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.BothBlock
  id: BothBlock
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: BothBlock
  nameWithType: Match.Outcome.BothBlock
  fullName: DuelingDuelsters.Classes.Match.Outcome.BothBlock
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: BothBlock
    path: src/Classes/Match.cs
    startLine: 219
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks.</li></ul></td><td class="description">Neither player takes damage or is staggered.</td></tr></tbody></table>
  example: []
  syntax:
    content: BothBlock = 7
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedDodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedDodge
  id: P1FailedDodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedDodge
  nameWithType: Match.Outcome.P1FailedDodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedDodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedDodge
    path: src/Classes/Match.cs
    startLine: 240
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> dodges in the opposite direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> lands an automatic critical hit.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1FailedDodge = 8
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedDodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedDodge
  id: P2FailedDodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedDodge
  nameWithType: Match.Outcome.P2FailedDodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedDodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedDodge
    path: src/Classes/Match.cs
    startLine: 261
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> dodges in the opposite direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> lands an automatic critical hit.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2FailedDodge = 9
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1Dodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1Dodge
  id: P1Dodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1Dodge
  nameWithType: Match.Outcome.P1Dodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1Dodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1Dodge
    path: src/Classes/Match.cs
    startLine: 282
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> dodges in the same direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> gets the chance to counter and a higher chance to land a critical hit on that counter.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1Dodge = 10
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2Dodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2Dodge
  id: P2Dodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2Dodge
  nameWithType: Match.Outcome.P2Dodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2Dodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2Dodge
    path: src/Classes/Match.cs
    startLine: 303
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> dodges in the same direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> gets the chance to counter and a higher chance to land a critical hit on that counter.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2Dodge = 11
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1DodgeBlock
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1DodgeBlock
  id: P1DodgeBlock
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1DodgeBlock
  nameWithType: Match.Outcome.P1DodgeBlock
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1DodgeBlock
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1DodgeBlock
    path: src/Classes/Match.cs
    startLine: 324
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> dodges in the same direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> gets a chance to counter, though they cannot land a critical hit and the damage is reduced by half.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1DodgeBlock = 12
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2DodgeBlock
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2DodgeBlock
  id: P2DodgeBlock
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2DodgeBlock
  nameWithType: Match.Outcome.P2DodgeBlock
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2DodgeBlock
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2DodgeBlock
    path: src/Classes/Match.cs
    startLine: 345
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> dodges in the same direction.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> gets a chance to counter, though they cannot land a critical hit and the damage is reduced by half.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2DodgeBlock = 13
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1BlockP2Dodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1BlockP2Dodge
  id: P1BlockP2Dodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1BlockP2Dodge
  nameWithType: Match.Outcome.P1BlockP2Dodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1BlockP2Dodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1BlockP2Dodge
    path: src/Classes/Match.cs
    startLine: 366
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> dodges in the opposite direction.</li></ul></td><td class="description">Neither player takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1BlockP2Dodge = 14
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2BlockP1Dodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2BlockP1Dodge
  id: P2BlockP1Dodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2BlockP1Dodge
  nameWithType: Match.Outcome.P2BlockP1Dodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2BlockP1Dodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2BlockP1Dodge
    path: src/Classes/Match.cs
    startLine: 387
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> dodges in the opposite direction.</li></ul></td><td class="description">Neither player takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2BlockP1Dodge = 15
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.DoubleDodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.DoubleDodge
  id: DoubleDodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: DoubleDodge
  nameWithType: Match.Outcome.DoubleDodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.DoubleDodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DoubleDodge
    path: src/Classes/Match.cs
    startLine: 400
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">Both players dodge.</td><td class="description">Neither player takes damage.</td></tr></tbody></table>
  example: []
  syntax:
    content: DoubleDodge = 16
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1HealP2Defend
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1HealP2Defend
  id: P1HealP2Defend
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1HealP2Defend
  nameWithType: Match.Outcome.P1HealP2Defend
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1HealP2Defend
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1HealP2Defend
    path: src/Classes/Match.cs
    startLine: 422
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> heals.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> defends or dodges.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> restores health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1HealP2Defend = 17
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2HealP1Defend
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2HealP1Defend
  id: P2HealP1Defend
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2HealP1Defend
  nameWithType: Match.Outcome.P2HealP1Defend
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2HealP1Defend
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2HealP1Defend
    path: src/Classes/Match.cs
    startLine: 443
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> heals.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks or dodges.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> restores health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2HealP1Defend = 18
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Defend
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Defend
  id: P1FailedHealP2Defend
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedHealP2Defend
  nameWithType: Match.Outcome.P1FailedHealP2Defend
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Defend
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedHealP2Defend
    path: src/Classes/Match.cs
    startLine: 464
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> attempts to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> blocks or dodges.</li></ul></td><td class="description">Neither player takes damage or restores health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1FailedHealP2Defend = 19
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Defend
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Defend
  id: P2FailedHealP1Defend
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedHealP1Defend
  nameWithType: Match.Outcome.P2FailedHealP1Defend
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Defend
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedHealP1Defend
    path: src/Classes/Match.cs
    startLine: 485
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> attempts to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> blocks or dodges.</li></ul></td><td class="description">Neither player takes damage or restores health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2FailedHealP1Defend = 20
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1HealP2Swing
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1HealP2Swing
  id: P1HealP2Swing
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1HealP2Swing
  nameWithType: Match.Outcome.P1HealP2Swing
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1HealP2Swing
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1HealP2Swing
    path: src/Classes/Match.cs
    startLine: 506
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> heals.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> restores health and has a chance to dodge <xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref>'s attack.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1HealP2Swing = 21
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2HealP1Swing
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2HealP1Swing
  id: P2HealP1Swing
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2HealP1Swing
  nameWithType: Match.Outcome.P2HealP1Swing
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2HealP1Swing
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2HealP1Swing
    path: src/Classes/Match.cs
    startLine: 527
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> heals.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li></ul></td><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> restores health and has a chance to dodge <xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref>'s attack.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2HealP1Swing = 22
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Swing
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Swing
  id: P1FailedHealP2Swing
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedHealP2Swing
  nameWithType: Match.Outcome.P1FailedHealP2Swing
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Swing
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedHealP2Swing
    path: src/Classes/Match.cs
    startLine: 548
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> attempts to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> swings.</li></ul></td><td class="description">Player Two has a chance for a critical hit.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1FailedHealP2Swing = 23
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Swing
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Swing
  id: P2FailedHealP1Swing
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedHealP1Swing
  nameWithType: Match.Outcome.P2FailedHealP1Swing
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Swing
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedHealP1Swing
    path: src/Classes/Match.cs
    startLine: 569
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> attempts to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> swings.</li></ul></td><td class="description">Player One has a chance for a critical hit.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2FailedHealP1Swing = 24
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Heal
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Heal
  id: P1FailedHealP2Heal
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedHealP2Heal
  nameWithType: Match.Outcome.P1FailedHealP2Heal
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedHealP2Heal
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedHealP2Heal
    path: src/Classes/Match.cs
    startLine: 590
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> attemps to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> heals.</li></ul></td><td class="description">Player One wastes a turn. Player Two recovers health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P1FailedHealP2Heal = 25
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Heal
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Heal
  id: P2FailedHealP1Heal
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedHealP1Heal
  nameWithType: Match.Outcome.P2FailedHealP1Heal
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedHealP1Heal
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedHealP1Heal
    path: src/Classes/Match.cs
    startLine: 611
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">

    <ul><li><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> attempts to heal but fails.</li><li><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> heals.</li></ul></td><td class="description">Player Two wastes a turn. Player One recovers health.</td></tr></tbody></table>
  example: []
  syntax:
    content: P2FailedHealP1Heal = 26
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.DoubleFailedHeal
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.DoubleFailedHeal
  id: DoubleFailedHeal
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: DoubleFailedHeal
  nameWithType: Match.Outcome.DoubleFailedHeal
  fullName: DuelingDuelsters.Classes.Match.Outcome.DoubleFailedHeal
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DoubleFailedHeal
    path: src/Classes/Match.cs
    startLine: 624
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">Both players attempt to heal but fail.</td><td class="description">Both players waste a turn.</td></tr></tbody></table>
  example: []
  syntax:
    content: DoubleFailedHeal = 27
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.DoubleHeal
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.DoubleHeal
  id: DoubleHeal
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: DoubleHeal
  nameWithType: Match.Outcome.DoubleHeal
  fullName: DuelingDuelsters.Classes.Match.Outcome.DoubleHeal
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DoubleHeal
    path: src/Classes/Match.cs
    startLine: 637
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description">Both players successfully heal.</td><td class="description">Both players recover health.</td></tr></tbody></table>
  example: []
  syntax:
    content: DoubleHeal = 28
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P1FailedCounter
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P1FailedCounter
  id: P1FailedCounter
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P1FailedCounter
  nameWithType: Match.Outcome.P1FailedCounter
  fullName: DuelingDuelsters.Classes.Match.Outcome.P1FailedCounter
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P1FailedCounter
    path: src/Classes/Match.cs
    startLine: 654
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerOne?text=Player+One" data-throw-if-not-resolved="false"></xref> fails a counter.</td><td class="description">The counter attempt is unsuccessful, and no damage is dealt.</td></tr></tbody></table>
  remarks: >-
    > [!NOTE]

    > This <code>Outcome</code> is only used to retrieve narration.
  example: []
  syntax:
    content: P1FailedCounter = 29
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.P2FailedCounter
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.P2FailedCounter
  id: P2FailedCounter
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: P2FailedCounter
  nameWithType: Match.Outcome.P2FailedCounter
  fullName: DuelingDuelsters.Classes.Match.Outcome.P2FailedCounter
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: P2FailedCounter
    path: src/Classes/Match.cs
    startLine: 671
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: <table><thead><tr><th class="term">Actions</th><th class="term">Result</th></tr></thead><tbody><tr><td class="description"><xref href="DuelingDuelsters.Classes.Match.PlayerTwo?text=Player+Two" data-throw-if-not-resolved="false"></xref> fails a counter.</td><td class="description">The counter attempt is unsuccessful, and no damage is dealt.</td></tr></tbody></table>
  remarks: >-
    > [!NOTE]

    > This <code>Outcome</code> is only used to retrieve narration.
  example: []
  syntax:
    content: P2FailedCounter = 30
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.HealDodge
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.HealDodge
  id: HealDodge
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: HealDodge
  nameWithType: Match.Outcome.HealDodge
  fullName: DuelingDuelsters.Classes.Match.Outcome.HealDodge
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HealDodge
    path: src/Classes/Match.cs
    startLine: 677
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The healing player dodges the attacking player's counterattack.

    > [!NOTE]

    > This <code>Outcome</code> is only used to retrieve narration.
  example: []
  syntax:
    content: HealDodge = 31
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
- uid: DuelingDuelsters.Classes.Match.Outcome.HealCounter
  commentId: F:DuelingDuelsters.Classes.Match.Outcome.HealCounter
  id: HealCounter
  parent: DuelingDuelsters.Classes.Match.Outcome
  langs:
  - csharp
  - vb
  name: HealCounter
  nameWithType: Match.Outcome.HealCounter
  fullName: DuelingDuelsters.Classes.Match.Outcome.HealCounter
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: v1.1-release
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HealCounter
    path: src/Classes/Match.cs
    startLine: 683
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The healing player gets hit by the attacking player's counterattack.

    > [!NOTE]

    > This <code>Outcome</code> is only used to retrieve narration.
  example: []
  syntax:
    content: HealCounter = 32
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
references:
- uid: DuelingDuelsters.Classes.Player.Action
  commentId: T:DuelingDuelsters.Classes.Player.Action
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player.Action
  nameWithType: Player.Action
  fullName: DuelingDuelsters.Classes.Player.Action
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
- uid: DuelingDuelsters.Classes.Match
  commentId: T:DuelingDuelsters.Classes.Match
  href: DuelingDuelsters.Classes.Match.html
  name: Match
  nameWithType: Match
  fullName: DuelingDuelsters.Classes.Match
- uid: DuelingDuelsters.Classes.Match.rng
  commentId: F:DuelingDuelsters.Classes.Match.rng
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_rng
  name: rng
  nameWithType: Match.rng
  fullName: DuelingDuelsters.Classes.Match.rng
- uid: DuelingDuelsters.Classes.Narrator
  commentId: T:DuelingDuelsters.Classes.Narrator
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Narrator.html
  name: Narrator
  nameWithType: Narrator
  fullName: DuelingDuelsters.Classes.Narrator
- uid: DuelingDuelsters.Classes
  commentId: N:DuelingDuelsters.Classes
  href: DuelingDuelsters.html
  name: DuelingDuelsters.Classes
  nameWithType: DuelingDuelsters.Classes
  fullName: DuelingDuelsters.Classes
  spec.csharp:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
  spec.vb:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
- uid: DuelingDuelsters.Classes.Match.Outcome
  commentId: T:DuelingDuelsters.Classes.Match.Outcome
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Match.html
  name: Match.Outcome
  nameWithType: Match.Outcome
  fullName: DuelingDuelsters.Classes.Match.Outcome
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
- uid: DuelingDuelsters.Classes.Match.PlayerOne
  commentId: P:DuelingDuelsters.Classes.Match.PlayerOne
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_PlayerOne
  name: PlayerOne
  nameWithType: Match.PlayerOne
  fullName: DuelingDuelsters.Classes.Match.PlayerOne
- uid: DuelingDuelsters.Classes.Match.PlayerTwo
  commentId: P:DuelingDuelsters.Classes.Match.PlayerTwo
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_PlayerTwo
  name: PlayerTwo
  nameWithType: Match.PlayerTwo
  fullName: DuelingDuelsters.Classes.Match.PlayerTwo
