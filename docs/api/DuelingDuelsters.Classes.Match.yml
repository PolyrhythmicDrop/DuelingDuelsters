### YamlMime:ManagedReference
items:
- uid: DuelingDuelsters.Classes.Match
  commentId: T:DuelingDuelsters.Classes.Match
  id: Match
  parent: DuelingDuelsters.Classes
  children:
  - DuelingDuelsters.Classes.Match.#ctor(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Narrator)
  - DuelingDuelsters.Classes.Match.ApplyAttackResult(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Match.AttemptHealCounter(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Match.CounterAttack(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Match.DeclareVictor
  - DuelingDuelsters.Classes.Match.DrawRoundHeader
  - DuelingDuelsters.Classes.Match.GetOutcome
  - DuelingDuelsters.Classes.Match.PlayRound
  - DuelingDuelsters.Classes.Match.PlayerOne
  - DuelingDuelsters.Classes.Match.PlayerTwo
  - DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  - DuelingDuelsters.Classes.Match.ProcessRound
  - DuelingDuelsters.Classes.Match.RoundCounter
  - DuelingDuelsters.Classes.Match.rng
  langs:
  - csharp
  - vb
  name: Match
  nameWithType: Match
  fullName: DuelingDuelsters.Classes.Match
  type: Class
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Match
    path: src/Classes/Match.cs
    startLine: 12
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Manages data about the current match, including the two players and the number of rounds since the match started.

    <p>
     A <code>Match</code> object defines methods for processing player actions, generating the round header at the start of each round, applying damage and heals, deciding on a match victor, and generating and processing the <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> of each round.
    </p>
  example: []
  syntax:
    content: public class Match
    content.vb: Public Class Match
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DuelingDuelsters.Classes.Match.#ctor(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Narrator)
  commentId: M:DuelingDuelsters.Classes.Match.#ctor(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Narrator)
  id: '#ctor(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Narrator)'
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: Match(Player, Player, Narrator)
  nameWithType: Match.Match(Player, Player, Narrator)
  fullName: DuelingDuelsters.Classes.Match.Match(DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Narrator)
  type: Constructor
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: .ctor
    path: src/Classes/Match.cs
    startLine: 21
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Instantiates a new Match object with two <xref href="DuelingDuelsters.Classes.Player" data-throw-if-not-resolved="false"></xref> characters and a <xref href="DuelingDuelsters.Classes.Narrator" data-throw-if-not-resolved="false"></xref>.<br />Sets the <xref href="DuelingDuelsters.Classes.Match.RoundCounter" data-throw-if-not-resolved="false"></xref> to <code>1</code> and initializes the match's <xref href="DuelingDuelsters.Classes.Match.rng" data-throw-if-not-resolved="false"></xref> member.
  example: []
  syntax:
    content: public Match(Player playerOne, Player playerTwo, Narrator narrator)
    parameters:
    - id: playerOne
      type: DuelingDuelsters.Classes.Player
      description: Player One, the first player.
    - id: playerTwo
      type: DuelingDuelsters.Classes.Player
      description: Player Two, the second player.
    - id: narrator
      type: DuelingDuelsters.Classes.Narrator
      description: <xref href="DuelingDuelsters.Classes.Narrator" data-throw-if-not-resolved="false"></xref> object to manage all the action menus and outcome strings.
    content.vb: Public Sub New(playerOne As Player, playerTwo As Player, narrator As Narrator)
  overload: DuelingDuelsters.Classes.Match.#ctor*
  nameWithType.vb: Match.New(Player, Player, Narrator)
  fullName.vb: DuelingDuelsters.Classes.Match.New(DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Narrator)
  name.vb: New(Player, Player, Narrator)
- uid: DuelingDuelsters.Classes.Match.PlayerOne
  commentId: P:DuelingDuelsters.Classes.Match.PlayerOne
  id: PlayerOne
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: PlayerOne
  nameWithType: Match.PlayerOne
  fullName: DuelingDuelsters.Classes.Match.PlayerOne
  type: Property
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: PlayerOne
    path: src/Classes/Match.cs
    startLine: 35
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The first player. This player is always human-controlled.
  example: []
  syntax:
    content: public Player PlayerOne { get; set; }
    parameters: []
    return:
      type: DuelingDuelsters.Classes.Player
    content.vb: Public Property PlayerOne As Player
  overload: DuelingDuelsters.Classes.Match.PlayerOne*
- uid: DuelingDuelsters.Classes.Match.PlayerTwo
  commentId: P:DuelingDuelsters.Classes.Match.PlayerTwo
  id: PlayerTwo
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: PlayerTwo
  nameWithType: Match.PlayerTwo
  fullName: DuelingDuelsters.Classes.Match.PlayerTwo
  type: Property
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: PlayerTwo
    path: src/Classes/Match.cs
    startLine: 47
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The second player. This player can be controlled by a human or by the game's AI, determined by the player's <xref href="DuelingDuelsters.Classes.Player.Brain" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Player PlayerTwo { get; set; }
    parameters: []
    return:
      type: DuelingDuelsters.Classes.Player
    content.vb: Public Property PlayerTwo As Player
  overload: DuelingDuelsters.Classes.Match.PlayerTwo*
- uid: DuelingDuelsters.Classes.Match.RoundCounter
  commentId: P:DuelingDuelsters.Classes.Match.RoundCounter
  id: RoundCounter
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: RoundCounter
  nameWithType: Match.RoundCounter
  fullName: DuelingDuelsters.Classes.Match.RoundCounter
  type: Property
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RoundCounter
    path: src/Classes/Match.cs
    startLine: 59
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The current round number.

    <p>

    The <code>RoundCounter</code> ticks up after each player's action is processed and the round results are returned. The <code>RoundCounter</code> is reset to <code>1</code> at the start of a match.

    </p>
  example: []
  syntax:
    content: public int RoundCounter { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RoundCounter As Integer
  overload: DuelingDuelsters.Classes.Match.RoundCounter*
- uid: DuelingDuelsters.Classes.Match.rng
  commentId: F:DuelingDuelsters.Classes.Match.rng
  id: rng
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: rng
  nameWithType: Match.rng
  fullName: DuelingDuelsters.Classes.Match.rng
  type: Field
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: rng
    path: src/Classes/Match.cs
    startLine: 68
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The match's random number generator instance. Used to figuratively roll the dice to decide hits, damage, and more.

    <p>

    The RNG is seeded with the current date and time when a new <code>Match</code> object is created.

    </p>
  example: []
  syntax:
    content: public static readonly Random rng
    return:
      type: System.Random
    content.vb: Public Shared ReadOnly rng As Random
- uid: DuelingDuelsters.Classes.Match.PlayRound
  commentId: M:DuelingDuelsters.Classes.Match.PlayRound
  id: PlayRound
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: PlayRound()
  nameWithType: Match.PlayRound()
  fullName: DuelingDuelsters.Classes.Match.PlayRound()
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: PlayRound
    path: src/Classes/Match.cs
    startLine: 703
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The main gameplay loop for a round of a match.

    <ol><li>Each player selects their actions using the <xref href="DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref> method.</li><li>The selected actions are narrated, processed into a round <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref>, and executed by calling the <xref href="DuelingDuelsters.Classes.Match.ProcessRound" data-throw-if-not-resolved="false"></xref> method.</li><li>The <xref href="DuelingDuelsters.Classes.Match.RoundCounter" data-throw-if-not-resolved="false"></xref> is incremented.</li><li>The players' chosen actions are cleared for the next round.</li></ol>
  example: []
  syntax:
    content: public void PlayRound()
    content.vb: Public Sub PlayRound()
  overload: DuelingDuelsters.Classes.Match.PlayRound*
- uid: DuelingDuelsters.Classes.Match.ProcessRound
  commentId: M:DuelingDuelsters.Classes.Match.ProcessRound
  id: ProcessRound
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: ProcessRound()
  nameWithType: Match.ProcessRound()
  fullName: DuelingDuelsters.Classes.Match.ProcessRound()
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ProcessRound
    path: src/Classes/Match.cs
    startLine: 769
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Processes the round's actions and outcomes.

    <ol><li>Each player's chosen <xref href="DuelingDuelsters.Classes.Player.Action?text=Action" data-throw-if-not-resolved="false"></xref> is narrated using the <xref href="DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref> method.</li><li>The round's <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> is generated from the chosen <xref href="DuelingDuelsters.Classes.Player.Action?text=Actions" data-throw-if-not-resolved="false"></xref> using the <xref href="DuelingDuelsters.Classes.Match.GetOutcome" data-throw-if-not-resolved="false"></xref> method.</li><li>The <code>Outcome</code> is narrated using the <xref href="DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> method.</li><li>The <code>Outcome</code> is processed using the <xref href="DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)" data-throw-if-not-resolved="false"></xref> method.</li></ol>
  example: []
  syntax:
    content: private void ProcessRound()
    content.vb: Private Sub ProcessRound()
  overload: DuelingDuelsters.Classes.Match.ProcessRound*
- uid: DuelingDuelsters.Classes.Match.GetOutcome
  commentId: M:DuelingDuelsters.Classes.Match.GetOutcome
  id: GetOutcome
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: GetOutcome()
  nameWithType: Match.GetOutcome()
  fullName: DuelingDuelsters.Classes.Match.GetOutcome()
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: GetOutcome
    path: src/Classes/Match.cs
    startLine: 795
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Generates an <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> based on the chosen actions of the two players.
  remarks: Refer to the <xref href="DuelingDuelsters.Classes.Match.Outcome" data-throw-if-not-resolved="false"></xref> documentation for more information on the <xref href="DuelingDuelsters.Classes.Player.Action?text=Action" data-throw-if-not-resolved="false"></xref> combinations that result in each <code>Outcome</code>.
  example: []
  syntax:
    content: private Match.Outcome GetOutcome()
    return:
      type: DuelingDuelsters.Classes.Match.Outcome
      description: An <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> used to generate narration and round results.
    content.vb: Private Function GetOutcome() As Match.Outcome
  overload: DuelingDuelsters.Classes.Match.GetOutcome*
- uid: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  commentId: M:DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  id: ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: ProcessOutcome(Outcome)
  nameWithType: Match.ProcessOutcome(Match.Outcome)
  fullName: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ProcessOutcome
    path: src/Classes/Match.cs
    startLine: 970
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Calls different methods based on the <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> passed as the <code class="paramref">actionKey</code> argument.

    <p>

    These methods apply attack damage, roll for counters and dodges, heal players, and convert actions taken during the round into meaningful results.

    </p>
  example: []
  syntax:
    content: private void ProcessOutcome(Match.Outcome actionKey)
    parameters:
    - id: actionKey
      type: DuelingDuelsters.Classes.Match.Outcome
      description: The <code>Outcome</code> used to determine which set of methods to call. This <code>Outcome</code> is generated by the <xref href="DuelingDuelsters.Classes.Match.GetOutcome" data-throw-if-not-resolved="false"></xref> method based on each player's actions.
    content.vb: Private Sub ProcessOutcome(actionKey As Match.Outcome)
  overload: DuelingDuelsters.Classes.Match.ProcessOutcome*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>Outcome</code> passed as an <code class="paramref">actionKey</code> argument was not a valid <code>Outcome</code>.
- uid: DuelingDuelsters.Classes.Match.CounterAttack(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Match.CounterAttack(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  id: CounterAttack(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: CounterAttack(Player, Player)
  nameWithType: Match.CounterAttack(Player, Player)
  fullName: DuelingDuelsters.Classes.Match.CounterAttack(DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: CounterAttack
    path: src/Classes/Match.cs
    startLine: 1071
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Executes a counterattack by the attacking player against the defending player.

    <p>

    <ol><li>Calls the <xref href="DuelingDuelsters.Classes.Player.IsCounter" data-throw-if-not-resolved="false"></xref> method to determine whether the attacking player successfully countered.</li><li>Based on the result of <xref href="DuelingDuelsters.Classes.Player.IsCounter" data-throw-if-not-resolved="false"></xref>, either narrates the <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref> for a failed counter or applies attack damage and resets the <xref href="DuelingDuelsters.Classes.Player.IsCountering" data-throw-if-not-resolved="false"></xref> variable.</li></ol>

    </p>
  example: []
  syntax:
    content: private void CounterAttack(Player atkPlayer, Player defPlayer)
    parameters:
    - id: atkPlayer
      type: DuelingDuelsters.Classes.Player
      description: The attacking player. This player is attempting a counterattack.
    - id: defPlayer
      type: DuelingDuelsters.Classes.Player
      description: The defending player. This player is defending from the potential counterattack.
    content.vb: Private Sub CounterAttack(atkPlayer As Player, defPlayer As Player)
  overload: DuelingDuelsters.Classes.Match.CounterAttack*
- uid: DuelingDuelsters.Classes.Match.AttemptHealCounter(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Match.AttemptHealCounter(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  id: AttemptHealCounter(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: AttemptHealCounter(Player, Player)
  nameWithType: Match.AttemptHealCounter(Player, Player)
  fullName: DuelingDuelsters.Classes.Match.AttemptHealCounter(DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: AttemptHealCounter
    path: src/Classes/Match.cs
    startLine: 1110
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Determines whether or not a healing player is successfully attacked by the other player, then processes the result.

    <p>

    When one player heals and the other swings their sword, the healing player has a chance to dodge the attacking player's attack. This method: 

    <ol><li>Calls the match's <xref href="DuelingDuelsters.Classes.Match.rng" data-throw-if-not-resolved="false"></xref> to determine whether or not the healer dodges the attack.</li><li>Narrates the outcome based on results of the dodge roll.</li><li>Resets the healing player's <xref href="DuelingDuelsters.Classes.Player.IsHealing" data-throw-if-not-resolved="false"></xref> flag to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> regardless of the dodge roll outcome.</li><li>Applies attack results if the dodge was unsuccessful.</li></ol>

    </p>
  remarks: If the healing player attempts to heal when they cannot heal (for example, if their medical bag is empty), the healing player does not get a chance to dodge, and the attacking player gets a free attack.
  example: []
  syntax:
    content: private void AttemptHealCounter(Player healer, Player attacker)
    parameters:
    - id: healer
      type: DuelingDuelsters.Classes.Player
      description: The healing player.
    - id: attacker
      type: DuelingDuelsters.Classes.Player
      description: The attacking player.
    content.vb: Private Sub AttemptHealCounter(healer As Player, attacker As Player)
  overload: DuelingDuelsters.Classes.Match.AttemptHealCounter*
- uid: DuelingDuelsters.Classes.Match.ApplyAttackResult(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Match.ApplyAttackResult(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  id: ApplyAttackResult(DuelingDuelsters.Classes.Player,DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: ApplyAttackResult(Player, Player)
  nameWithType: Match.ApplyAttackResult(Player, Player)
  fullName: DuelingDuelsters.Classes.Match.ApplyAttackResult(DuelingDuelsters.Classes.Player, DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ApplyAttackResult
    path: src/Classes/Match.cs
    startLine: 1153
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Applies damage to a defending player after a successful attack by an attacking player. The damage applied is based on:

    <ul><li>The attacking and defending players' stats.</li><li>Whether or not the defending player is blocking while the attacking player is executing a counterattack.</li><li>Whether or not the attacking player has scored a critical hit.</li></ul>
  remarks: This method calls <xref href="DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref> to determine if the attacking player has scored a critical hit. If the critical hit is successful, this method calls <xref href="DuelingDuelsters.Classes.Player.CalculateCritDamage" data-throw-if-not-resolved="false"></xref> to determine how much damage the critical hit adds to the attack damage.
  example: []
  syntax:
    content: private void ApplyAttackResult(Player atkPlayer, Player defPlayer)
    parameters:
    - id: atkPlayer
      type: DuelingDuelsters.Classes.Player
      description: The attacking player.
    - id: defPlayer
      type: DuelingDuelsters.Classes.Player
      description: The defending player.
    content.vb: Private Sub ApplyAttackResult(atkPlayer As Player, defPlayer As Player)
  overload: DuelingDuelsters.Classes.Match.ApplyAttackResult*
- uid: DuelingDuelsters.Classes.Match.DrawRoundHeader
  commentId: M:DuelingDuelsters.Classes.Match.DrawRoundHeader
  id: DrawRoundHeader
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: DrawRoundHeader()
  nameWithType: Match.DrawRoundHeader()
  fullName: DuelingDuelsters.Classes.Match.DrawRoundHeader()
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DrawRoundHeader
    path: src/Classes/Match.cs
    startLine: 1183
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Draws the round header during a match using data from the players. The round header is updated after every round.
  example: []
  syntax:
    content: public string DrawRoundHeader()
    return:
      type: System.String
      description: A built string containing the player's names, health, heals remaining (if a player is a Medic), and the round count.
    content.vb: Public Function DrawRoundHeader() As String
  overload: DuelingDuelsters.Classes.Match.DrawRoundHeader*
- uid: DuelingDuelsters.Classes.Match.DeclareVictor
  commentId: M:DuelingDuelsters.Classes.Match.DeclareVictor
  id: DeclareVictor
  parent: DuelingDuelsters.Classes.Match
  langs:
  - csharp
  - vb
  name: DeclareVictor()
  nameWithType: Match.DeclareVictor()
  fullName: DuelingDuelsters.Classes.Match.DeclareVictor()
  type: Method
  source:
    remote:
      path: src/Classes/Match.cs
      branch: main
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DeclareVictor
    path: src/Classes/Match.cs
    startLine: 1297
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Declares a victor at the end of a match.
  remarks: If the round ended in a draw, the victor is "nobody". This is usually the result of both players taking mortal damage at the same time.
  example: []
  syntax:
    content: public void DeclareVictor()
    content.vb: Public Sub DeclareVictor()
  overload: DuelingDuelsters.Classes.Match.DeclareVictor*
references:
- uid: DuelingDuelsters.Classes.Match.Outcome
  commentId: T:DuelingDuelsters.Classes.Match.Outcome
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Match.html
  name: Match.Outcome
  nameWithType: Match.Outcome
  fullName: DuelingDuelsters.Classes.Match.Outcome
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
- uid: DuelingDuelsters.Classes
  commentId: N:DuelingDuelsters.Classes
  href: DuelingDuelsters.html
  name: DuelingDuelsters.Classes
  nameWithType: DuelingDuelsters.Classes
  fullName: DuelingDuelsters.Classes
  spec.csharp:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
  spec.vb:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DuelingDuelsters.Classes.Player
  commentId: T:DuelingDuelsters.Classes.Player
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player
  nameWithType: Player
  fullName: DuelingDuelsters.Classes.Player
- uid: DuelingDuelsters.Classes.Narrator
  commentId: T:DuelingDuelsters.Classes.Narrator
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Narrator.html
  name: Narrator
  nameWithType: Narrator
  fullName: DuelingDuelsters.Classes.Narrator
- uid: DuelingDuelsters.Classes.Match.RoundCounter
  commentId: P:DuelingDuelsters.Classes.Match.RoundCounter
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_RoundCounter
  name: RoundCounter
  nameWithType: Match.RoundCounter
  fullName: DuelingDuelsters.Classes.Match.RoundCounter
- uid: DuelingDuelsters.Classes.Match.rng
  commentId: F:DuelingDuelsters.Classes.Match.rng
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_rng
  name: rng
  nameWithType: Match.rng
  fullName: DuelingDuelsters.Classes.Match.rng
- uid: DuelingDuelsters.Classes.Match.#ctor*
  commentId: Overload:DuelingDuelsters.Classes.Match.#ctor
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match__ctor_DuelingDuelsters_Classes_Player_DuelingDuelsters_Classes_Player_DuelingDuelsters_Classes_Narrator_
  name: Match
  nameWithType: Match.Match
  fullName: DuelingDuelsters.Classes.Match.Match
  nameWithType.vb: Match.New
  fullName.vb: DuelingDuelsters.Classes.Match.New
  name.vb: New
- uid: DuelingDuelsters.Classes.Match.PlayerOne*
  commentId: Overload:DuelingDuelsters.Classes.Match.PlayerOne
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_PlayerOne
  name: PlayerOne
  nameWithType: Match.PlayerOne
  fullName: DuelingDuelsters.Classes.Match.PlayerOne
- uid: DuelingDuelsters.Classes.Player.Brain
  commentId: F:DuelingDuelsters.Classes.Player.Brain
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Brain
  name: Brain
  nameWithType: Player.Brain
  fullName: DuelingDuelsters.Classes.Player.Brain
- uid: DuelingDuelsters.Classes.Match.PlayerTwo*
  commentId: Overload:DuelingDuelsters.Classes.Match.PlayerTwo
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_PlayerTwo
  name: PlayerTwo
  nameWithType: Match.PlayerTwo
  fullName: DuelingDuelsters.Classes.Match.PlayerTwo
- uid: DuelingDuelsters.Classes.Match.RoundCounter*
  commentId: Overload:DuelingDuelsters.Classes.Match.RoundCounter
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_RoundCounter
  name: RoundCounter
  nameWithType: Match.RoundCounter
  fullName: DuelingDuelsters.Classes.Match.RoundCounter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunPlayerActionSelect_DuelingDuelsters_Classes_Player_
  name: RunPlayerActionSelect(Player)
  nameWithType: Narrator.RunPlayerActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
    name: RunPlayerActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunPlayerActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
    name: RunPlayerActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunPlayerActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Match.ProcessRound
  commentId: M:DuelingDuelsters.Classes.Match.ProcessRound
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessRound
  name: ProcessRound()
  nameWithType: Match.ProcessRound()
  fullName: DuelingDuelsters.Classes.Match.ProcessRound()
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match.ProcessRound
    name: ProcessRound
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessRound
  - name: (
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match.ProcessRound
    name: ProcessRound
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessRound
  - name: (
  - name: )
- uid: DuelingDuelsters.Classes.Match.PlayRound*
  commentId: Overload:DuelingDuelsters.Classes.Match.PlayRound
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_PlayRound
  name: PlayRound
  nameWithType: Match.PlayRound
  fullName: DuelingDuelsters.Classes.Match.PlayRound
- uid: DuelingDuelsters.Classes.Player.Action
  commentId: T:DuelingDuelsters.Classes.Player.Action
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player.Action
  nameWithType: Player.Action
  fullName: DuelingDuelsters.Classes.Player.Action
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
- uid: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetPlayerActionNarration_DuelingDuelsters_Classes_Player_
  name: GetPlayerActionNarration(Player)
  nameWithType: Narrator.GetPlayerActionNarration(Player)
  fullName: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
    name: GetPlayerActionNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetPlayerActionNarration_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
    name: GetPlayerActionNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetPlayerActionNarration_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Match.GetOutcome
  commentId: M:DuelingDuelsters.Classes.Match.GetOutcome
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_GetOutcome
  name: GetOutcome()
  nameWithType: Match.GetOutcome()
  fullName: DuelingDuelsters.Classes.Match.GetOutcome()
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match.GetOutcome
    name: GetOutcome
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_GetOutcome
  - name: (
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match.GetOutcome
    name: GetOutcome
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_GetOutcome
  - name: (
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  commentId: M:DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  isExternal: true
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  name: GetOutcomeNarration(Outcome, string, string)
  nameWithType: Narrator.GetOutcomeNarration(Match.Outcome, string, string)
  fullName: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, string, string)
  nameWithType.vb: Narrator.GetOutcomeNarration(Match.Outcome, String, String)
  fullName.vb: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, String, String)
  name.vb: GetOutcomeNarration(Outcome, String, String)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
    name: GetOutcomeNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
    name: GetOutcomeNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  commentId: M:DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessOutcome_DuelingDuelsters_Classes_Match_Outcome_
  name: ProcessOutcome(Outcome)
  nameWithType: Match.ProcessOutcome(Match.Outcome)
  fullName: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
    name: ProcessOutcome
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessOutcome_DuelingDuelsters_Classes_Match_Outcome_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match.ProcessOutcome(DuelingDuelsters.Classes.Match.Outcome)
    name: ProcessOutcome
    href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessOutcome_DuelingDuelsters_Classes_Match_Outcome_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: )
- uid: DuelingDuelsters.Classes.Match.ProcessRound*
  commentId: Overload:DuelingDuelsters.Classes.Match.ProcessRound
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessRound
  name: ProcessRound
  nameWithType: Match.ProcessRound
  fullName: DuelingDuelsters.Classes.Match.ProcessRound
- uid: DuelingDuelsters.Classes.Match.GetOutcome*
  commentId: Overload:DuelingDuelsters.Classes.Match.GetOutcome
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_GetOutcome
  name: GetOutcome
  nameWithType: Match.GetOutcome
  fullName: DuelingDuelsters.Classes.Match.GetOutcome
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: DuelingDuelsters.Classes.Match.ProcessOutcome*
  commentId: Overload:DuelingDuelsters.Classes.Match.ProcessOutcome
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ProcessOutcome_DuelingDuelsters_Classes_Match_Outcome_
  name: ProcessOutcome
  nameWithType: Match.ProcessOutcome
  fullName: DuelingDuelsters.Classes.Match.ProcessOutcome
- uid: DuelingDuelsters.Classes.Player.IsCounter
  commentId: M:DuelingDuelsters.Classes.Player.IsCounter
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCounter
  name: IsCounter()
  nameWithType: Player.IsCounter()
  fullName: DuelingDuelsters.Classes.Player.IsCounter()
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player.IsCounter
    name: IsCounter
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCounter
  - name: (
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player.IsCounter
    name: IsCounter
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCounter
  - name: (
  - name: )
- uid: DuelingDuelsters.Classes.Player.IsCountering
  commentId: P:DuelingDuelsters.Classes.Player.IsCountering
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCountering
  name: IsCountering
  nameWithType: Player.IsCountering
  fullName: DuelingDuelsters.Classes.Player.IsCountering
- uid: DuelingDuelsters.Classes.Match.CounterAttack*
  commentId: Overload:DuelingDuelsters.Classes.Match.CounterAttack
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_CounterAttack_DuelingDuelsters_Classes_Player_DuelingDuelsters_Classes_Player_
  name: CounterAttack
  nameWithType: Match.CounterAttack
  fullName: DuelingDuelsters.Classes.Match.CounterAttack
- uid: DuelingDuelsters.Classes.Player.IsHealing
  commentId: P:DuelingDuelsters.Classes.Player.IsHealing
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsHealing
  name: IsHealing
  nameWithType: Player.IsHealing
  fullName: DuelingDuelsters.Classes.Player.IsHealing
- uid: DuelingDuelsters.Classes.Match.AttemptHealCounter*
  commentId: Overload:DuelingDuelsters.Classes.Match.AttemptHealCounter
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_AttemptHealCounter_DuelingDuelsters_Classes_Player_DuelingDuelsters_Classes_Player_
  name: AttemptHealCounter
  nameWithType: Match.AttemptHealCounter
  fullName: DuelingDuelsters.Classes.Match.AttemptHealCounter
- uid: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCrit_DuelingDuelsters_Classes_Player_
  name: IsCrit(Player)
  nameWithType: Player.IsCrit(Player)
  fullName: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
    name: IsCrit
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCrit_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
    name: IsCrit
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCrit_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Player.CalculateCritDamage
  commentId: M:DuelingDuelsters.Classes.Player.CalculateCritDamage
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CalculateCritDamage
  name: CalculateCritDamage()
  nameWithType: Player.CalculateCritDamage()
  fullName: DuelingDuelsters.Classes.Player.CalculateCritDamage()
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player.CalculateCritDamage
    name: CalculateCritDamage
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CalculateCritDamage
  - name: (
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player.CalculateCritDamage
    name: CalculateCritDamage
    href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CalculateCritDamage
  - name: (
  - name: )
- uid: DuelingDuelsters.Classes.Match.ApplyAttackResult*
  commentId: Overload:DuelingDuelsters.Classes.Match.ApplyAttackResult
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_ApplyAttackResult_DuelingDuelsters_Classes_Player_DuelingDuelsters_Classes_Player_
  name: ApplyAttackResult
  nameWithType: Match.ApplyAttackResult
  fullName: DuelingDuelsters.Classes.Match.ApplyAttackResult
- uid: DuelingDuelsters.Classes.Match.DrawRoundHeader*
  commentId: Overload:DuelingDuelsters.Classes.Match.DrawRoundHeader
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_DrawRoundHeader
  name: DrawRoundHeader
  nameWithType: Match.DrawRoundHeader
  fullName: DuelingDuelsters.Classes.Match.DrawRoundHeader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DuelingDuelsters.Classes.Match.DeclareVictor*
  commentId: Overload:DuelingDuelsters.Classes.Match.DeclareVictor
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_DeclareVictor
  name: DeclareVictor
  nameWithType: Match.DeclareVictor
  fullName: DuelingDuelsters.Classes.Match.DeclareVictor
