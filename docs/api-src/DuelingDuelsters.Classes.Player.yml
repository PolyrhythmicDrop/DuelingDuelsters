### YamlMime:ManagedReference
items:
- uid: DuelingDuelsters.Classes.Player
  commentId: T:DuelingDuelsters.Classes.Player
  id: Player
  parent: DuelingDuelsters.Classes
  children:
  - DuelingDuelsters.Classes.Player.#ctor(DuelingDuelsters.Classes.Player.PlayerBrain)
  - DuelingDuelsters.Classes.Player.ActionList
  - DuelingDuelsters.Classes.Player.ActionTaken
  - DuelingDuelsters.Classes.Player.Attack
  - DuelingDuelsters.Classes.Player.BaseDamage
  - DuelingDuelsters.Classes.Player.Brain
  - DuelingDuelsters.Classes.Player.BuildActionList
  - DuelingDuelsters.Classes.Player.BuildCharacterSheet
  - DuelingDuelsters.Classes.Player.CalculateBaseDamage(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Player.CalculateCritDamage
  - DuelingDuelsters.Classes.Player.CanHeal
  - DuelingDuelsters.Classes.Player.CharSheet
  - DuelingDuelsters.Classes.Player.ChosenAction
  - DuelingDuelsters.Classes.Player.Class
  - DuelingDuelsters.Classes.Player.Defense
  - DuelingDuelsters.Classes.Player.HealSelf
  - DuelingDuelsters.Classes.Player.HealsPerformed
  - DuelingDuelsters.Classes.Player.Health
  - DuelingDuelsters.Classes.Player.HealthReadout
  - DuelingDuelsters.Classes.Player.IsCounter
  - DuelingDuelsters.Classes.Player.IsCountering
  - DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Player.IsHealing
  - DuelingDuelsters.Classes.Player.IsStaggered
  - DuelingDuelsters.Classes.Player.MaxHealth
  - DuelingDuelsters.Classes.Player.Name
  - DuelingDuelsters.Classes.Player.ResetCharacterHealth
  - DuelingDuelsters.Classes.Player.Speed
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: DuelingDuelsters.Classes.Player
  type: Class
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Player
    path: src/Classes/Player.cs
    startLine: 7
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Contains and manages player character stats, AI, class details, actions, and other data.
  example: []
  syntax:
    content: public class Player
    content.vb: Public Class Player
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DuelingDuelsters.Classes.Player.#ctor(DuelingDuelsters.Classes.Player.PlayerBrain)
  commentId: M:DuelingDuelsters.Classes.Player.#ctor(DuelingDuelsters.Classes.Player.PlayerBrain)
  id: '#ctor(DuelingDuelsters.Classes.Player.PlayerBrain)'
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Player(PlayerBrain)
  nameWithType: Player.Player(Player.PlayerBrain)
  fullName: DuelingDuelsters.Classes.Player.Player(DuelingDuelsters.Classes.Player.PlayerBrain)
  type: Constructor
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: .ctor
    path: src/Classes/Player.cs
    startLine: 13
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Default constructor for a <code>Player</code> object.
  example: []
  syntax:
    content: public Player(Player.PlayerBrain brain)
    parameters:
    - id: brain
      type: DuelingDuelsters.Classes.Player.PlayerBrain
      description: ''
    content.vb: Public Sub New(brain As Player.PlayerBrain)
  overload: DuelingDuelsters.Classes.Player.#ctor*
  nameWithType.vb: Player.New(Player.PlayerBrain)
  fullName.vb: DuelingDuelsters.Classes.Player.New(DuelingDuelsters.Classes.Player.PlayerBrain)
  name.vb: New(PlayerBrain)
- uid: DuelingDuelsters.Classes.Player.Name
  commentId: P:DuelingDuelsters.Classes.Player.Name
  id: Name
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Player.Name
  fullName: DuelingDuelsters.Classes.Player.Name
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Name
    path: src/Classes/Player.cs
    startLine: 27
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's name, chosen during character creation.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: DuelingDuelsters.Classes.Player.Name*
- uid: DuelingDuelsters.Classes.Player.Class
  commentId: P:DuelingDuelsters.Classes.Player.Class
  id: Class
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: Player.Class
  fullName: DuelingDuelsters.Classes.Player.Class
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Class
    path: src/Classes/Player.cs
    startLine: 69
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's chosen class, set during character creation.
  example: []
  syntax:
    content: public Player.PlayerClass Class { get; set; }
    parameters: []
    return:
      type: DuelingDuelsters.Classes.Player.PlayerClass
    content.vb: Public Property [Class] As Player.PlayerClass
  overload: DuelingDuelsters.Classes.Player.Class*
- uid: DuelingDuelsters.Classes.Player.Brain
  commentId: F:DuelingDuelsters.Classes.Player.Brain
  id: Brain
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Brain
  nameWithType: Player.Brain
  fullName: DuelingDuelsters.Classes.Player.Brain
  type: Field
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Brain
    path: src/Classes/Player.cs
    startLine: 93
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: This player's brain, set during player count selection.
  example: []
  syntax:
    content: public Player.PlayerBrain Brain
    return:
      type: DuelingDuelsters.Classes.Player.PlayerBrain
    content.vb: Public Brain As Player.PlayerBrain
- uid: DuelingDuelsters.Classes.Player.Health
  commentId: P:DuelingDuelsters.Classes.Player.Health
  id: Health
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Health
  nameWithType: Player.Health
  fullName: DuelingDuelsters.Classes.Player.Health
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Health
    path: src/Classes/Player.cs
    startLine: 100
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's current health. The player's <code>Health</code> value cannot be less than 0 or higher than the player's <xref href="DuelingDuelsters.Classes.Player.MaxHealth?text=MaxHealth" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Health { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Health As Integer
  overload: DuelingDuelsters.Classes.Player.Health*
- uid: DuelingDuelsters.Classes.Player.MaxHealth
  commentId: P:DuelingDuelsters.Classes.Player.MaxHealth
  id: MaxHealth
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: MaxHealth
  nameWithType: Player.MaxHealth
  fullName: DuelingDuelsters.Classes.Player.MaxHealth
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: MaxHealth
    path: src/Classes/Player.cs
    startLine: 118
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's maximum health. Each class has a different <code>MaxHealth</code>.
  example: []
  syntax:
    content: public int MaxHealth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxHealth As Integer
  overload: DuelingDuelsters.Classes.Player.MaxHealth*
- uid: DuelingDuelsters.Classes.Player.HealthReadout
  commentId: P:DuelingDuelsters.Classes.Player.HealthReadout
  id: HealthReadout
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: HealthReadout
  nameWithType: Player.HealthReadout
  fullName: DuelingDuelsters.Classes.Player.HealthReadout
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HealthReadout
    path: src/Classes/Player.cs
    startLine: 126
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's health readout, displayed on the round header while a match is in progress. This helps the player keep track of their health during a match so they can act accordingly.
  example: []
  syntax:
    content: public string HealthReadout { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HealthReadout As String
  overload: DuelingDuelsters.Classes.Player.HealthReadout*
- uid: DuelingDuelsters.Classes.Player.Attack
  commentId: P:DuelingDuelsters.Classes.Player.Attack
  id: Attack
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Attack
  nameWithType: Player.Attack
  fullName: DuelingDuelsters.Classes.Player.Attack
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Attack
    path: src/Classes/Player.cs
    startLine: 142
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The player's attack statistic. The higher the <code>Attack</code>, the more damage the player does with each hit. 

    <p>

    The player's <code>Attack</code> value is used to calculate base damage and critical damage.

    </p>
  example: []
  syntax:
    content: public int Attack { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Attack As Integer
  overload: DuelingDuelsters.Classes.Player.Attack*
- uid: DuelingDuelsters.Classes.Player.Defense
  commentId: P:DuelingDuelsters.Classes.Player.Defense
  id: Defense
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Defense
  nameWithType: Player.Defense
  fullName: DuelingDuelsters.Classes.Player.Defense
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Defense
    path: src/Classes/Player.cs
    startLine: 148
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's defense statistic. The higher the <code>Defense</code>, the less damage the player takes when they are hit.
  remarks: <code>Defense</code> does not apply to critical hit damage! Skilled players can use this fact to their advantage when playing against a Fridge character.
  example: []
  syntax:
    content: public int Defense { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Defense As Integer
  overload: DuelingDuelsters.Classes.Player.Defense*
- uid: DuelingDuelsters.Classes.Player.Speed
  commentId: P:DuelingDuelsters.Classes.Player.Speed
  id: Speed
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: Player.Speed
  fullName: DuelingDuelsters.Classes.Player.Speed
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Speed
    path: src/Classes/Player.cs
    startLine: 156
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    The player's speed statistic. 

    <p>

    The higher the <code>Speed</code>, the more likely the player is to land critical hits and execute counterattacks on successful dodges.

    </p>
  example: []
  syntax:
    content: public int Speed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Speed As Integer
  overload: DuelingDuelsters.Classes.Player.Speed*
- uid: DuelingDuelsters.Classes.Player.CharSheet
  commentId: P:DuelingDuelsters.Classes.Player.CharSheet
  id: CharSheet
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: CharSheet
  nameWithType: Player.CharSheet
  fullName: DuelingDuelsters.Classes.Player.CharSheet
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: CharSheet
    path: src/Classes/Player.cs
    startLine: 161
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's character sheet. The sheet is built using the player's current health and stats every time it is retrieved.
  example: []
  syntax:
    content: public string CharSheet { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CharSheet As String
  overload: DuelingDuelsters.Classes.Player.CharSheet*
- uid: DuelingDuelsters.Classes.Player.ActionList
  commentId: F:DuelingDuelsters.Classes.Player.ActionList
  id: ActionList
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: ActionList
  nameWithType: Player.ActionList
  fullName: DuelingDuelsters.Classes.Player.ActionList
  type: Field
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ActionList
    path: src/Classes/Player.cs
    startLine: 171
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: A list of actions the player can select from during action selection. This list is generated after the player selects a class.
  example: []
  syntax:
    content: public string ActionList
    return:
      type: System.String
    content.vb: Public ActionList As String
- uid: DuelingDuelsters.Classes.Player.ChosenAction
  commentId: P:DuelingDuelsters.Classes.Player.ChosenAction
  id: ChosenAction
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: ChosenAction
  nameWithType: Player.ChosenAction
  fullName: DuelingDuelsters.Classes.Player.ChosenAction
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ChosenAction
    path: src/Classes/Player.cs
    startLine: 216
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The <code>Action</code> the player has chosen this round.
  example: []
  syntax:
    content: public Player.Action ChosenAction { get; set; }
    parameters: []
    return:
      type: DuelingDuelsters.Classes.Player.Action
    content.vb: Public Property ChosenAction As Player.Action
  overload: DuelingDuelsters.Classes.Player.ChosenAction*
- uid: DuelingDuelsters.Classes.Player.BaseDamage
  commentId: P:DuelingDuelsters.Classes.Player.BaseDamage
  id: BaseDamage
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: BaseDamage
  nameWithType: Player.BaseDamage
  fullName: DuelingDuelsters.Classes.Player.BaseDamage
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: BaseDamage
    path: src/Classes/Player.cs
    startLine: 224
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The base damage for this player. BaseDamage is calculated using the attacking player's <xref href="DuelingDuelsters.Classes.Player.Attack?text=Attack" data-throw-if-not-resolved="false"></xref> and the defending player's <xref href="DuelingDuelsters.Classes.Player.Defense?text=Defense" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int BaseDamage { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BaseDamage As Integer
  overload: DuelingDuelsters.Classes.Player.BaseDamage*
- uid: DuelingDuelsters.Classes.Player.ActionTaken
  commentId: P:DuelingDuelsters.Classes.Player.ActionTaken
  id: ActionTaken
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: ActionTaken
  nameWithType: Player.ActionTaken
  fullName: DuelingDuelsters.Classes.Player.ActionTaken
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ActionTaken
    path: src/Classes/Player.cs
    startLine: 245
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Flag that indicates whether or not the player has selected an action this round.

    <p>

    <code>true</code> if the player has selected an action.<br />

    <code>false</code> if the player have not selected an action.

    </p>
  example: []
  syntax:
    content: public bool ActionTaken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ActionTaken As Boolean
  overload: DuelingDuelsters.Classes.Player.ActionTaken*
- uid: DuelingDuelsters.Classes.Player.IsStaggered
  commentId: P:DuelingDuelsters.Classes.Player.IsStaggered
  id: IsStaggered
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: IsStaggered
  nameWithType: Player.IsStaggered
  fullName: DuelingDuelsters.Classes.Player.IsStaggered
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: IsStaggered
    path: src/Classes/Player.cs
    startLine: 252
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Flag that indicates whether or not the player is staggered.
  remarks: A player becomes staggered when the player's attack is blocked by a defending player. A staggered player is more susceptible to a critical hit if they are attacked in the next round.
  example: []
  syntax:
    content: public bool IsStaggered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsStaggered As Boolean
  overload: DuelingDuelsters.Classes.Player.IsStaggered*
- uid: DuelingDuelsters.Classes.Player.IsCountering
  commentId: P:DuelingDuelsters.Classes.Player.IsCountering
  id: IsCountering
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: IsCountering
  nameWithType: Player.IsCountering
  fullName: DuelingDuelsters.Classes.Player.IsCountering
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: IsCountering
    path: src/Classes/Player.cs
    startLine: 259
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Flag the indicates whether or not the player is countering.
  remarks: Players have a chance to counter when they successfully <xref href="DuelingDuelsters.Classes.Player.Action.dodgeL?text=dodge" data-throw-if-not-resolved="false"></xref> an attack. Countering players score an automatic critical hit on their opponents.
  example: []
  syntax:
    content: public bool IsCountering { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCountering As Boolean
  overload: DuelingDuelsters.Classes.Player.IsCountering*
- uid: DuelingDuelsters.Classes.Player.IsHealing
  commentId: P:DuelingDuelsters.Classes.Player.IsHealing
  id: IsHealing
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: IsHealing
  nameWithType: Player.IsHealing
  fullName: DuelingDuelsters.Classes.Player.IsHealing
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: IsHealing
    path: src/Classes/Player.cs
    startLine: 266
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Flag that indicates whether or not the player is healing.
  remarks: Healing players are susceptible to counterattacks if the other player took a <xref href="DuelingDuelsters.Classes.Player.Action.swingL?text=swing" data-throw-if-not-resolved="false"></xref> Action during the same round.
  example: []
  syntax:
    content: public bool IsHealing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHealing As Boolean
  overload: DuelingDuelsters.Classes.Player.IsHealing*
- uid: DuelingDuelsters.Classes.Player.HealsPerformed
  commentId: P:DuelingDuelsters.Classes.Player.HealsPerformed
  id: HealsPerformed
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: HealsPerformed
  nameWithType: Player.HealsPerformed
  fullName: DuelingDuelsters.Classes.Player.HealsPerformed
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HealsPerformed
    path: src/Classes/Player.cs
    startLine: 275
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The number of times the player has healed during the match.
  remarks: A player's <code>HealsPerformed</code> starts at <code>0</code> and increments every time the player heals. When <code>HealsPerformed</code> reaches <code>3</code>, the player's <xref href="DuelingDuelsters.Classes.Player.CanHeal?text=CanHeal" data-throw-if-not-resolved="false"></xref> flag changes to <code>false</code> and the player can no longer heal for the rest of the match.
  example: []
  syntax:
    content: public int HealsPerformed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HealsPerformed As Integer
  overload: DuelingDuelsters.Classes.Player.HealsPerformed*
- uid: DuelingDuelsters.Classes.Player.CanHeal
  commentId: P:DuelingDuelsters.Classes.Player.CanHeal
  id: CanHeal
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: CanHeal
  nameWithType: Player.CanHeal
  fullName: DuelingDuelsters.Classes.Player.CanHeal
  type: Property
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: CanHeal
    path: src/Classes/Player.cs
    startLine: 295
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Flag that indicates whether or not the player can heal.
  remarks: <code>CanHeal</code> is <code>true</code> as long as <xref href="DuelingDuelsters.Classes.Player.HealsPerformed?text=HealsPerformed" data-throw-if-not-resolved="false"></xref> is less than 3.
  example: []
  syntax:
    content: public bool CanHeal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanHeal As Boolean
  overload: DuelingDuelsters.Classes.Player.CanHeal*
- uid: DuelingDuelsters.Classes.Player.BuildCharacterSheet
  commentId: M:DuelingDuelsters.Classes.Player.BuildCharacterSheet
  id: BuildCharacterSheet
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: BuildCharacterSheet()
  nameWithType: Player.BuildCharacterSheet()
  fullName: DuelingDuelsters.Classes.Player.BuildCharacterSheet()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: BuildCharacterSheet
    path: src/Classes/Player.cs
    startLine: 305
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Builds a character sheet for the character.
  remarks: This method runs when the value of <xref href="DuelingDuelsters.Classes.Player.CharSheet?text=CharSheet" data-throw-if-not-resolved="false"></xref> is read, typically at the start of a round.
  example: []
  syntax:
    content: public string BuildCharacterSheet()
    return:
      type: System.String
      description: A string containing the character sheet and a fancy asterisk border.
    content.vb: Public Function BuildCharacterSheet() As String
  overload: DuelingDuelsters.Classes.Player.BuildCharacterSheet*
- uid: DuelingDuelsters.Classes.Player.BuildActionList
  commentId: M:DuelingDuelsters.Classes.Player.BuildActionList
  id: BuildActionList
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: BuildActionList()
  nameWithType: Player.BuildActionList()
  fullName: DuelingDuelsters.Classes.Player.BuildActionList()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: BuildActionList
    path: src/Classes/Player.cs
    startLine: 390
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Builds a set of actions for the player to choose from and sets the <xref href="DuelingDuelsters.Classes.Player.ActionList" data-throw-if-not-resolved="false"></xref> member variable to the resulting string. Different actions are available depending on the player's class.
  remarks: This method is run once for each player after character creation.
  example: []
  syntax:
    content: public void BuildActionList()
    content.vb: Public Sub BuildActionList()
  overload: DuelingDuelsters.Classes.Player.BuildActionList*
- uid: DuelingDuelsters.Classes.Player.ResetCharacterHealth
  commentId: M:DuelingDuelsters.Classes.Player.ResetCharacterHealth
  id: ResetCharacterHealth
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: ResetCharacterHealth()
  nameWithType: Player.ResetCharacterHealth()
  fullName: DuelingDuelsters.Classes.Player.ResetCharacterHealth()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ResetCharacterHealth
    path: src/Classes/Player.cs
    startLine: 428
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Resets the player's health to their <xref href="DuelingDuelsters.Classes.Player.MaxHealth" data-throw-if-not-resolved="false"></xref>.
  remarks: This method is called at the start of a rematch.
  example: []
  syntax:
    content: public void ResetCharacterHealth()
    content.vb: Public Sub ResetCharacterHealth()
  overload: DuelingDuelsters.Classes.Player.ResetCharacterHealth*
- uid: DuelingDuelsters.Classes.Player.CalculateBaseDamage(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Player.CalculateBaseDamage(DuelingDuelsters.Classes.Player)
  id: CalculateBaseDamage(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: CalculateBaseDamage(Player)
  nameWithType: Player.CalculateBaseDamage(Player)
  fullName: DuelingDuelsters.Classes.Player.CalculateBaseDamage(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: CalculateBaseDamage
    path: src/Classes/Player.cs
    startLine: 438
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Calculates base damage for this player. Base damage is calculated using the player's <xref href="DuelingDuelsters.Classes.Player.Attack?text=Attack" data-throw-if-not-resolved="false"></xref> and the <xref href="DuelingDuelsters.Classes.Player.Defense?text=Defense" data-throw-if-not-resolved="false"></xref> of the <code class="paramref">defPlayer</code>.
  example: []
  syntax:
    content: public int CalculateBaseDamage(Player defPlayer)
    parameters:
    - id: defPlayer
      type: DuelingDuelsters.Classes.Player
      description: The defending player.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CalculateBaseDamage(defPlayer As Player) As Integer
  overload: DuelingDuelsters.Classes.Player.CalculateBaseDamage*
- uid: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  id: IsCrit(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: IsCrit(Player)
  nameWithType: Player.IsCrit(Player)
  fullName: DuelingDuelsters.Classes.Player.IsCrit(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: IsCrit
    path: src/Classes/Player.cs
    startLine: 467
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Determines whether or not the player lands a critical hit.
  remarks: >-
    The player's chance to land a critical hit rises if the player's <xref href="DuelingDuelsters.Classes.Player.IsCountering?text=IsCountering" data-throw-if-not-resolved="false"></xref> flag is set to <code>true</code>. A higher <xref href="DuelingDuelsters.Classes.Player.Speed?text=Speed" data-throw-if-not-resolved="false"></xref> stat also increases the chance for a critical hit.
         <p>
         A critical hit is successful if:
         <ul><li>The player rolls a `12` or greater on their critical roll (determined by <xref href="DuelingDuelsters.Classes.Match.rng?text=RNG" data-throw-if-not-resolved="false"></xref>) and the <code class="paramref">defPlayer</code> is not blocking.</li><li>The defending player is staggered.</li><li>The defending player dodges into the attack.</li></ul>
         </p>
  example: []
  syntax:
    content: public bool IsCrit(Player defPlayer)
    parameters:
    - id: defPlayer
      type: DuelingDuelsters.Classes.Player
      description: The defending player.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player successfully landed a critical hit.<br />
            <code>false</code> if the player did not land a critical hit.
    content.vb: Public Function IsCrit(defPlayer As Player) As Boolean
  overload: DuelingDuelsters.Classes.Player.IsCrit*
- uid: DuelingDuelsters.Classes.Player.CalculateCritDamage
  commentId: M:DuelingDuelsters.Classes.Player.CalculateCritDamage
  id: CalculateCritDamage
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: CalculateCritDamage()
  nameWithType: Player.CalculateCritDamage()
  fullName: DuelingDuelsters.Classes.Player.CalculateCritDamage()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: CalculateCritDamage
    path: src/Classes/Player.cs
    startLine: 486
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Calculates damage for a critical hit.
  remarks: Critical hits ignore opposing player's defense, and critical hit damage is applied on top of any base damage. Critical hit damage is based on <xref href="DuelingDuelsters.Classes.Match.rng?text=RNG" data-throw-if-not-resolved="false"></xref> and the player's <xref href="DuelingDuelsters.Classes.Player.Attack?text=Attack" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int CalculateCritDamage()
    return:
      type: System.Int32
      description: Critical hit damage.
    content.vb: Public Function CalculateCritDamage() As Integer
  overload: DuelingDuelsters.Classes.Player.CalculateCritDamage*
- uid: DuelingDuelsters.Classes.Player.IsCounter
  commentId: M:DuelingDuelsters.Classes.Player.IsCounter
  id: IsCounter
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: IsCounter()
  nameWithType: Player.IsCounter()
  fullName: DuelingDuelsters.Classes.Player.IsCounter()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: IsCounter
    path: src/Classes/Player.cs
    startLine: 498
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Determines whether or not the player successfully executes a counterattack. The player's <xref href="DuelingDuelsters.Classes.Player.IsCountering?text=IsCountering" data-throw-if-not-resolved="false"></xref> variable is set to the result.
  remarks: A counterattack's success is based on <xref href="DuelingDuelsters.Classes.Match.rng?text=RNG" data-throw-if-not-resolved="false"></xref> and the player's <xref href="DuelingDuelsters.Classes.Player.Speed?text=Speed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsCounter()
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player successfully counters.<br />
            <code>false</code> if the player does not successfully counter.
    content.vb: Public Function IsCounter() As Boolean
  overload: DuelingDuelsters.Classes.Player.IsCounter*
- uid: DuelingDuelsters.Classes.Player.HealSelf
  commentId: M:DuelingDuelsters.Classes.Player.HealSelf
  id: HealSelf
  parent: DuelingDuelsters.Classes.Player
  langs:
  - csharp
  - vb
  name: HealSelf()
  nameWithType: Player.HealSelf()
  fullName: DuelingDuelsters.Classes.Player.HealSelf()
  type: Method
  source:
    remote:
      path: src/Classes/Player.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HealSelf
    path: src/Classes/Player.cs
    startLine: 509
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Heals the player if they have heals remaining.
  example: []
  syntax:
    content: public void HealSelf()
    content.vb: Public Sub HealSelf()
  overload: DuelingDuelsters.Classes.Player.HealSelf*
references:
- uid: DuelingDuelsters.Classes
  commentId: N:DuelingDuelsters.Classes
  href: DuelingDuelsters.html
  name: DuelingDuelsters.Classes
  nameWithType: DuelingDuelsters.Classes
  fullName: DuelingDuelsters.Classes
  spec.csharp:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
  spec.vb:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DuelingDuelsters.Classes.Player.#ctor*
  commentId: Overload:DuelingDuelsters.Classes.Player.#ctor
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player__ctor_DuelingDuelsters_Classes_Player_PlayerBrain_
  name: Player
  nameWithType: Player.Player
  fullName: DuelingDuelsters.Classes.Player.Player
  nameWithType.vb: Player.New
  fullName.vb: DuelingDuelsters.Classes.Player.New
  name.vb: New
- uid: DuelingDuelsters.Classes.Player.PlayerBrain
  commentId: T:DuelingDuelsters.Classes.Player.PlayerBrain
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player.PlayerBrain
  nameWithType: Player.PlayerBrain
  fullName: DuelingDuelsters.Classes.Player.PlayerBrain
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerBrain
    name: PlayerBrain
    href: DuelingDuelsters.Classes.Player.PlayerBrain.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerBrain
    name: PlayerBrain
    href: DuelingDuelsters.Classes.Player.PlayerBrain.html
- uid: DuelingDuelsters.Classes.Player.Name*
  commentId: Overload:DuelingDuelsters.Classes.Player.Name
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Name
  name: Name
  nameWithType: Player.Name
  fullName: DuelingDuelsters.Classes.Player.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DuelingDuelsters.Classes.Player.Class*
  commentId: Overload:DuelingDuelsters.Classes.Player.Class
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Class
  name: Class
  nameWithType: Player.Class
  fullName: DuelingDuelsters.Classes.Player.Class
- uid: DuelingDuelsters.Classes.Player.PlayerClass
  commentId: T:DuelingDuelsters.Classes.Player.PlayerClass
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player.PlayerClass
  nameWithType: Player.PlayerClass
  fullName: DuelingDuelsters.Classes.Player.PlayerClass
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerClass
    name: PlayerClass
    href: DuelingDuelsters.Classes.Player.PlayerClass.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerClass
    name: PlayerClass
    href: DuelingDuelsters.Classes.Player.PlayerClass.html
- uid: DuelingDuelsters.Classes.Player.MaxHealth
  commentId: P:DuelingDuelsters.Classes.Player.MaxHealth
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_MaxHealth
  name: MaxHealth
  nameWithType: Player.MaxHealth
  fullName: DuelingDuelsters.Classes.Player.MaxHealth
- uid: DuelingDuelsters.Classes.Player.Health*
  commentId: Overload:DuelingDuelsters.Classes.Player.Health
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Health
  name: Health
  nameWithType: Player.Health
  fullName: DuelingDuelsters.Classes.Player.Health
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DuelingDuelsters.Classes.Player.MaxHealth*
  commentId: Overload:DuelingDuelsters.Classes.Player.MaxHealth
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_MaxHealth
  name: MaxHealth
  nameWithType: Player.MaxHealth
  fullName: DuelingDuelsters.Classes.Player.MaxHealth
- uid: DuelingDuelsters.Classes.Player.HealthReadout*
  commentId: Overload:DuelingDuelsters.Classes.Player.HealthReadout
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_HealthReadout
  name: HealthReadout
  nameWithType: Player.HealthReadout
  fullName: DuelingDuelsters.Classes.Player.HealthReadout
- uid: DuelingDuelsters.Classes.Player.Attack*
  commentId: Overload:DuelingDuelsters.Classes.Player.Attack
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Attack
  name: Attack
  nameWithType: Player.Attack
  fullName: DuelingDuelsters.Classes.Player.Attack
- uid: DuelingDuelsters.Classes.Player.Defense*
  commentId: Overload:DuelingDuelsters.Classes.Player.Defense
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Defense
  name: Defense
  nameWithType: Player.Defense
  fullName: DuelingDuelsters.Classes.Player.Defense
- uid: DuelingDuelsters.Classes.Player.Speed*
  commentId: Overload:DuelingDuelsters.Classes.Player.Speed
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Speed
  name: Speed
  nameWithType: Player.Speed
  fullName: DuelingDuelsters.Classes.Player.Speed
- uid: DuelingDuelsters.Classes.Player.CharSheet*
  commentId: Overload:DuelingDuelsters.Classes.Player.CharSheet
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CharSheet
  name: CharSheet
  nameWithType: Player.CharSheet
  fullName: DuelingDuelsters.Classes.Player.CharSheet
- uid: DuelingDuelsters.Classes.Player.ChosenAction*
  commentId: Overload:DuelingDuelsters.Classes.Player.ChosenAction
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_ChosenAction
  name: ChosenAction
  nameWithType: Player.ChosenAction
  fullName: DuelingDuelsters.Classes.Player.ChosenAction
- uid: DuelingDuelsters.Classes.Player.Action
  commentId: T:DuelingDuelsters.Classes.Player.Action
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player.Action
  nameWithType: Player.Action
  fullName: DuelingDuelsters.Classes.Player.Action
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.Action
    name: Action
    href: DuelingDuelsters.Classes.Player.Action.html
- uid: DuelingDuelsters.Classes.Player.Attack
  commentId: P:DuelingDuelsters.Classes.Player.Attack
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Attack
  name: Attack
  nameWithType: Player.Attack
  fullName: DuelingDuelsters.Classes.Player.Attack
- uid: DuelingDuelsters.Classes.Player.Defense
  commentId: P:DuelingDuelsters.Classes.Player.Defense
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Defense
  name: Defense
  nameWithType: Player.Defense
  fullName: DuelingDuelsters.Classes.Player.Defense
- uid: DuelingDuelsters.Classes.Player.BaseDamage*
  commentId: Overload:DuelingDuelsters.Classes.Player.BaseDamage
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_BaseDamage
  name: BaseDamage
  nameWithType: Player.BaseDamage
  fullName: DuelingDuelsters.Classes.Player.BaseDamage
- uid: DuelingDuelsters.Classes.Player.ActionTaken*
  commentId: Overload:DuelingDuelsters.Classes.Player.ActionTaken
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_ActionTaken
  name: ActionTaken
  nameWithType: Player.ActionTaken
  fullName: DuelingDuelsters.Classes.Player.ActionTaken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DuelingDuelsters.Classes.Player.IsStaggered*
  commentId: Overload:DuelingDuelsters.Classes.Player.IsStaggered
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsStaggered
  name: IsStaggered
  nameWithType: Player.IsStaggered
  fullName: DuelingDuelsters.Classes.Player.IsStaggered
- uid: DuelingDuelsters.Classes.Player.Action.dodgeL
  commentId: F:DuelingDuelsters.Classes.Player.Action.dodgeL
  href: DuelingDuelsters.Classes.Player.Action.html#DuelingDuelsters_Classes_Player_Action_dodgeL
  name: dodgeL
  nameWithType: Player.Action.dodgeL
  fullName: DuelingDuelsters.Classes.Player.Action.dodgeL
- uid: DuelingDuelsters.Classes.Player.IsCountering*
  commentId: Overload:DuelingDuelsters.Classes.Player.IsCountering
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCountering
  name: IsCountering
  nameWithType: Player.IsCountering
  fullName: DuelingDuelsters.Classes.Player.IsCountering
- uid: DuelingDuelsters.Classes.Player.Action.swingL
  commentId: F:DuelingDuelsters.Classes.Player.Action.swingL
  href: DuelingDuelsters.Classes.Player.Action.html#DuelingDuelsters_Classes_Player_Action_swingL
  name: swingL
  nameWithType: Player.Action.swingL
  fullName: DuelingDuelsters.Classes.Player.Action.swingL
- uid: DuelingDuelsters.Classes.Player.IsHealing*
  commentId: Overload:DuelingDuelsters.Classes.Player.IsHealing
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsHealing
  name: IsHealing
  nameWithType: Player.IsHealing
  fullName: DuelingDuelsters.Classes.Player.IsHealing
- uid: DuelingDuelsters.Classes.Player.CanHeal
  commentId: P:DuelingDuelsters.Classes.Player.CanHeal
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CanHeal
  name: CanHeal
  nameWithType: Player.CanHeal
  fullName: DuelingDuelsters.Classes.Player.CanHeal
- uid: DuelingDuelsters.Classes.Player.HealsPerformed*
  commentId: Overload:DuelingDuelsters.Classes.Player.HealsPerformed
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_HealsPerformed
  name: HealsPerformed
  nameWithType: Player.HealsPerformed
  fullName: DuelingDuelsters.Classes.Player.HealsPerformed
- uid: DuelingDuelsters.Classes.Player.HealsPerformed
  commentId: P:DuelingDuelsters.Classes.Player.HealsPerformed
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_HealsPerformed
  name: HealsPerformed
  nameWithType: Player.HealsPerformed
  fullName: DuelingDuelsters.Classes.Player.HealsPerformed
- uid: DuelingDuelsters.Classes.Player.CanHeal*
  commentId: Overload:DuelingDuelsters.Classes.Player.CanHeal
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CanHeal
  name: CanHeal
  nameWithType: Player.CanHeal
  fullName: DuelingDuelsters.Classes.Player.CanHeal
- uid: DuelingDuelsters.Classes.Player.CharSheet
  commentId: P:DuelingDuelsters.Classes.Player.CharSheet
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CharSheet
  name: CharSheet
  nameWithType: Player.CharSheet
  fullName: DuelingDuelsters.Classes.Player.CharSheet
- uid: DuelingDuelsters.Classes.Player.BuildCharacterSheet*
  commentId: Overload:DuelingDuelsters.Classes.Player.BuildCharacterSheet
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_BuildCharacterSheet
  name: BuildCharacterSheet
  nameWithType: Player.BuildCharacterSheet
  fullName: DuelingDuelsters.Classes.Player.BuildCharacterSheet
- uid: DuelingDuelsters.Classes.Player.ActionList
  commentId: F:DuelingDuelsters.Classes.Player.ActionList
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_ActionList
  name: ActionList
  nameWithType: Player.ActionList
  fullName: DuelingDuelsters.Classes.Player.ActionList
- uid: DuelingDuelsters.Classes.Player.BuildActionList*
  commentId: Overload:DuelingDuelsters.Classes.Player.BuildActionList
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_BuildActionList
  name: BuildActionList
  nameWithType: Player.BuildActionList
  fullName: DuelingDuelsters.Classes.Player.BuildActionList
- uid: DuelingDuelsters.Classes.Player.ResetCharacterHealth*
  commentId: Overload:DuelingDuelsters.Classes.Player.ResetCharacterHealth
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_ResetCharacterHealth
  name: ResetCharacterHealth
  nameWithType: Player.ResetCharacterHealth
  fullName: DuelingDuelsters.Classes.Player.ResetCharacterHealth
- uid: DuelingDuelsters.Classes.Player.CalculateBaseDamage*
  commentId: Overload:DuelingDuelsters.Classes.Player.CalculateBaseDamage
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CalculateBaseDamage_DuelingDuelsters_Classes_Player_
  name: CalculateBaseDamage
  nameWithType: Player.CalculateBaseDamage
  fullName: DuelingDuelsters.Classes.Player.CalculateBaseDamage
- uid: DuelingDuelsters.Classes.Player
  commentId: T:DuelingDuelsters.Classes.Player
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player
  nameWithType: Player
  fullName: DuelingDuelsters.Classes.Player
- uid: DuelingDuelsters.Classes.Player.IsCountering
  commentId: P:DuelingDuelsters.Classes.Player.IsCountering
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCountering
  name: IsCountering
  nameWithType: Player.IsCountering
  fullName: DuelingDuelsters.Classes.Player.IsCountering
- uid: DuelingDuelsters.Classes.Player.Speed
  commentId: P:DuelingDuelsters.Classes.Player.Speed
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_Speed
  name: Speed
  nameWithType: Player.Speed
  fullName: DuelingDuelsters.Classes.Player.Speed
- uid: DuelingDuelsters.Classes.Match.rng
  commentId: F:DuelingDuelsters.Classes.Match.rng
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_rng
  name: rng
  nameWithType: Match.rng
  fullName: DuelingDuelsters.Classes.Match.rng
- uid: DuelingDuelsters.Classes.Player.IsCrit*
  commentId: Overload:DuelingDuelsters.Classes.Player.IsCrit
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCrit_DuelingDuelsters_Classes_Player_
  name: IsCrit
  nameWithType: Player.IsCrit
  fullName: DuelingDuelsters.Classes.Player.IsCrit
- uid: DuelingDuelsters.Classes.Player.CalculateCritDamage*
  commentId: Overload:DuelingDuelsters.Classes.Player.CalculateCritDamage
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_CalculateCritDamage
  name: CalculateCritDamage
  nameWithType: Player.CalculateCritDamage
  fullName: DuelingDuelsters.Classes.Player.CalculateCritDamage
- uid: DuelingDuelsters.Classes.Player.IsCounter*
  commentId: Overload:DuelingDuelsters.Classes.Player.IsCounter
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_IsCounter
  name: IsCounter
  nameWithType: Player.IsCounter
  fullName: DuelingDuelsters.Classes.Player.IsCounter
- uid: DuelingDuelsters.Classes.Player.HealSelf*
  commentId: Overload:DuelingDuelsters.Classes.Player.HealSelf
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_HealSelf
  name: HealSelf
  nameWithType: Player.HealSelf
  fullName: DuelingDuelsters.Classes.Player.HealSelf
