### YamlMime:ManagedReference
items:
- uid: DuelingDuelsters.Classes.Narrator
  commentId: T:DuelingDuelsters.Classes.Narrator
  id: Narrator
  parent: DuelingDuelsters.Classes
  children:
  - DuelingDuelsters.Classes.Narrator.Choice
  - DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.DrawArena
  - DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  - DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.Key
  - DuelingDuelsters.Classes.Narrator.KeyInfo
  - DuelingDuelsters.Classes.Narrator.PressAnyKey
  - DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.ReadLineWithCancel
  - DuelingDuelsters.Classes.Narrator.RunCharacterCreation(DuelingDuelsters.Classes.Player,System.Int32)
  - DuelingDuelsters.Classes.Narrator.RunHelpScreen
  - DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu(System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}@)
  - DuelingDuelsters.Classes.Narrator.RunTitleMenu
  - DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
  - DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  - DuelingDuelsters.Classes.Narrator.UndoActionSelection(DuelingDuelsters.Classes.Player,System.Boolean@)
  - DuelingDuelsters.Classes.Narrator.declareVictor
  - DuelingDuelsters.Classes.Narrator.postMatchOptions
  - DuelingDuelsters.Classes.Narrator.readyToDuel
  langs:
  - csharp
  - vb
  name: Narrator
  nameWithType: Narrator
  fullName: DuelingDuelsters.Classes.Narrator
  type: Class
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Narrator
    path: src/Classes/Narrator.cs
    startLine: 19
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Manages menus, user input, and almost all of the strings in the game.

    <p>

    The <code>Narrator</code> class defines methods for running each menu in the game, selecting from binary options, retrieving narration strings based on a round's <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref>, and processing user input.

    </p>

    <p>
     The <code>Narrator</code> class also defines the <xref href="DuelingDuelsters.Classes.Narrator.Choices?text=Choices" data-throw-if-not-resolved="false"></xref> enumeration, which is used to pass menu selections to outside scopes. For example, many methods make use of the <xref href="DuelingDuelsters.Classes.Narrator.Choices.Back?text=Back" data-throw-if-not-resolved="false"></xref> <code>Choice</code> to return to a previous menu or cancel a decision.
    </p>
  remarks: >-
    > [!NOTE]

    > The Narrator class defines most of the string constants used in Dueling Duelsters. To view these constants, refer to the [Narrator source code on GitHub](https://github.com/PolyrhythmicDrop/DuelingDuelsters/blob/main/src/Classes/Narrator.cs/).
  example: []
  syntax:
    content: public class Narrator
    content.vb: Public Class Narrator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DuelingDuelsters.Classes.Narrator.KeyInfo
  commentId: P:DuelingDuelsters.Classes.Narrator.KeyInfo
  id: KeyInfo
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: KeyInfo
  nameWithType: Narrator.KeyInfo
  fullName: DuelingDuelsters.Classes.Narrator.KeyInfo
  type: Property
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: KeyInfo
    path: src/Classes/Narrator.cs
    startLine: 28
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Key info for processing input in certain menus.
  example: []
  syntax:
    content: public ConsoleKeyInfo KeyInfo { get; set; }
    parameters: []
    return:
      type: System.ConsoleKeyInfo
    content.vb: Public Property KeyInfo As ConsoleKeyInfo
  overload: DuelingDuelsters.Classes.Narrator.KeyInfo*
- uid: DuelingDuelsters.Classes.Narrator.Key
  commentId: P:DuelingDuelsters.Classes.Narrator.Key
  id: Key
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Narrator.Key
  fullName: DuelingDuelsters.Classes.Narrator.Key
  type: Property
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Key
    path: src/Classes/Narrator.cs
    startLine: 37
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The keyboard key entered by the user when prompted.
  example: []
  syntax:
    content: public ConsoleKey Key { get; }
    parameters: []
    return:
      type: System.ConsoleKey
    content.vb: Public ReadOnly Property Key As ConsoleKey
  overload: DuelingDuelsters.Classes.Narrator.Key*
- uid: DuelingDuelsters.Classes.Narrator.Choice
  commentId: F:DuelingDuelsters.Classes.Narrator.Choice
  id: Choice
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: Choice
  nameWithType: Narrator.Choice
  fullName: DuelingDuelsters.Classes.Narrator.Choice
  type: Field
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: Choice
    path: src/Classes/Narrator.cs
    startLine: 96
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: The player's selection for any given menu.
  example: []
  syntax:
    content: public Narrator.Choices Choice
    return:
      type: DuelingDuelsters.Classes.Narrator.Choices
    content.vb: Public Choice As Narrator.Choices
- uid: DuelingDuelsters.Classes.Narrator.readyToDuel
  commentId: F:DuelingDuelsters.Classes.Narrator.readyToDuel
  id: readyToDuel
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: readyToDuel
  nameWithType: Narrator.readyToDuel
  fullName: DuelingDuelsters.Classes.Narrator.readyToDuel
  type: Field
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: readyToDuel
    path: src/Classes/Narrator.cs
    startLine: 165
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: 'Confirmation that you are, in fact, ready to duel like your life depends on it (spoiler: it does).'
  example: []
  syntax:
    content: internal const string readyToDuel = "\nAre you ready to duel like you've never duelled before?\n\n1. Yes, let's do this!\n2. No, let's start over."
    return:
      type: System.String
    content.vb: Friend Const readyToDuel As String = vbLf & "Are you ready to duel like you've never duelled before?" & vbLf & vbLf & "1. Yes, let's do this!" & vbLf & "2. No, let's start over."
- uid: DuelingDuelsters.Classes.Narrator.declareVictor
  commentId: F:DuelingDuelsters.Classes.Narrator.declareVictor
  id: declareVictor
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: declareVictor
  nameWithType: Narrator.declareVictor
  fullName: DuelingDuelsters.Classes.Narrator.declareVictor
  type: Field
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: declareVictor
    path: src/Classes/Narrator.cs
    startLine: 247
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: String constant that declares the victor at the end of a match.
  example: []
  syntax:
    content: public const string declareVictor = "\n*** {0} is victorious! ***\n\nAll hail the most dueling Duelster of them all:\n\n*** {1} ***\n"
    return:
      type: System.String
    content.vb: Public Const declareVictor As String = vbLf & "*** {0} is victorious! ***" & vbLf & vbLf & "All hail the most dueling Duelster of them all:" & vbLf & vbLf & "*** {1} ***" & vbLf
- uid: DuelingDuelsters.Classes.Narrator.postMatchOptions
  commentId: F:DuelingDuelsters.Classes.Narrator.postMatchOptions
  id: postMatchOptions
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: postMatchOptions
  nameWithType: Narrator.postMatchOptions
  fullName: DuelingDuelsters.Classes.Narrator.postMatchOptions
  type: Field
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: postMatchOptions
    path: src/Classes/Narrator.cs
    startLine: 251
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Dialog that displays at the end of each match. Provides follow-up options for the player.
  example: []
  syntax:
    content: public const string postMatchOptions = "What do you want to do next?\n\n1. Return to title\n2. Rematch\n"
    return:
      type: System.String
    content.vb: Public Const postMatchOptions As String = "What do you want to do next?" & vbLf & vbLf & "1. Return to title" & vbLf & "2. Rematch" & vbLf
- uid: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  id: GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: GetPlayerActionNarration(Player)
  nameWithType: Narrator.GetPlayerActionNarration(Player)
  fullName: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: GetPlayerActionNarration
    path: src/Classes/Narrator.cs
    startLine: 260
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Gets the appropriate narration string for the selected player action.
  example: []
  syntax:
    content: public string GetPlayerActionNarration(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player to narrate. The narration for the player's <xref href="DuelingDuelsters.Classes.Player.ChosenAction?text=ChosenAction" data-throw-if-not-resolved="false"></xref> is returned.
    return:
      type: System.String
      description: A description of the player's action.
    content.vb: Public Function GetPlayerActionNarration(player As Player) As String
  overload: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The player has not chosen an action. This probably means this method was called before action selection. Did you mean to call <xref href="DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref> instead?
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The player's chosen action does not have a matching narration string.
- uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  commentId: M:DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  id: GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: GetOutcomeNarration(Outcome, string?, string?)
  nameWithType: Narrator.GetOutcomeNarration(Match.Outcome, string?, string?)
  fullName: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, string?, string?)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: GetOutcomeNarration
    path: src/Classes/Narrator.cs
    startLine: 317
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Gets the appropriate narration string for the round's <xref href="DuelingDuelsters.Classes.Match.Outcome?text=Outcome" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string GetOutcomeNarration(Match.Outcome outcome, string? pOne, string? pTwo)
    parameters:
    - id: outcome
      type: DuelingDuelsters.Classes.Match.Outcome
      description: The <code>Outcome</code> for which to retrieve narration.
    - id: pOne
      type: System.String
      description: Player One
    - id: pTwo
      type: System.String
      description: Player Two
    return:
      type: System.String
      description: A description of the round's outcome.
    content.vb: Public Function GetOutcomeNarration(outcome As Match.Outcome, pOne As String, pTwo As String) As String
  overload: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration*
  nameWithType.vb: Narrator.GetOutcomeNarration(Match.Outcome, String, String)
  fullName.vb: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, String, String)
  name.vb: GetOutcomeNarration(Outcome, String, String)
- uid: DuelingDuelsters.Classes.Narrator.RunTitleMenu
  commentId: M:DuelingDuelsters.Classes.Narrator.RunTitleMenu
  id: RunTitleMenu
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RunTitleMenu()
  nameWithType: Narrator.RunTitleMenu()
  fullName: DuelingDuelsters.Classes.Narrator.RunTitleMenu()
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RunTitleMenu
    path: src/Classes/Narrator.cs
    startLine: 444
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Draws the title screen menu and processes user input.
  example: []
  syntax:
    content: public bool RunTitleMenu()
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player made a valid selection. A <code>true</code> result also breaks the player out of the title menu loop.<br />
            <code>false</code> if the player did not make a valid selection. The title menu loop continues if <cref><code>RunTitleMenu()</code></cref> returns false.
    content.vb: Public Function RunTitleMenu() As Boolean
  overload: DuelingDuelsters.Classes.Narrator.RunTitleMenu*
- uid: DuelingDuelsters.Classes.Narrator.RunCharacterCreation(DuelingDuelsters.Classes.Player,System.Int32)
  commentId: M:DuelingDuelsters.Classes.Narrator.RunCharacterCreation(DuelingDuelsters.Classes.Player,System.Int32)
  id: RunCharacterCreation(DuelingDuelsters.Classes.Player,System.Int32)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RunCharacterCreation(Player, int)
  nameWithType: Narrator.RunCharacterCreation(Player, int)
  fullName: DuelingDuelsters.Classes.Narrator.RunCharacterCreation(DuelingDuelsters.Classes.Player, int)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RunCharacterCreation
    path: src/Classes/Narrator.cs
    startLine: 509
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Runs the character creation menu for a single player. The character creation menu has three sub-menus, each run by a separate method:

    <ol><li><strong>Name Selection</strong> - <xref href="DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref></li><li><strong>Class Selection</strong> - <xref href="DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref></li><li><strong>Confirmation</strong> - <xref href="DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)" data-throw-if-not-resolved="false"></xref></li></ol>
  example: []
  syntax:
    content: public bool RunCharacterCreation(Player player, int playerNumber)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The character to create. The selected name and class will be applied to this player.
    - id: playerNumber
      type: System.Int32
      description: The number of the player. This value is mostly used for narration.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if character creation completed successfully.<br />
            <code>false</code> if an error occurred or the player cancelled.
    content.vb: Public Function RunCharacterCreation(player As Player, playerNumber As Integer) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.RunCharacterCreation*
  nameWithType.vb: Narrator.RunCharacterCreation(Player, Integer)
  fullName.vb: DuelingDuelsters.Classes.Narrator.RunCharacterCreation(DuelingDuelsters.Classes.Player, Integer)
  name.vb: RunCharacterCreation(Player, Integer)
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  id: SetPlayerName(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: SetPlayerName(Player)
  nameWithType: Narrator.SetPlayerName(Player)
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: SetPlayerName
    path: src/Classes/Narrator.cs
    startLine: 613
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Menu to set a player's name during character creation.
  example: []
  syntax:
    content: private bool SetPlayerName(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player to name.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player's name was set successfully.<br />
            <code>false</code> if the menu is still running or the player's name was not entered successfully.
    content.vb: Private Function SetPlayerName(player As Player) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.SetPlayerName*
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  id: SetPlayerClass(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: SetPlayerClass(Player)
  nameWithType: Narrator.SetPlayerClass(Player)
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: SetPlayerClass
    path: src/Classes/Narrator.cs
    startLine: 663
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Menu to set a player's class during character creation. Once a class is selected, this method also sets the player's stats according to the chosen class.
  example: []
  syntax:
    content: private bool SetPlayerClass(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player whose class is set.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player's class was set successfully.<br />
            <code>false</code> if the menu is still running or the player's class was not set successfully.
    content.vb: Private Function SetPlayerClass(player As Player) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.SetPlayerClass*
- uid: DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass(DuelingDuelsters.Classes.Player)
  id: RandomSetPlayerClass(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RandomSetPlayerClass(Player)
  nameWithType: Narrator.RandomSetPlayerClass(Player)
  fullName: DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RandomSetPlayerClass
    path: src/Classes/Narrator.cs
    startLine: 775
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Randomly selects a player's class. This method is called if the player selects the <code>Random</code> option during the class selection menu (<xref href="DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: private void RandomSetPlayerClass(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player whose class is randomized.
    content.vb: Private Sub RandomSetPlayerClass(player As Player)
  overload: DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass*
- uid: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu(System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}@)
  commentId: M:DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu(System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}@)
  id: RunPlayerCountMenu(System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}@)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RunPlayerCountMenu(out PlayerBrain?)
  nameWithType: Narrator.RunPlayerCountMenu(out Player.PlayerBrain?)
  fullName: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu(out DuelingDuelsters.Classes.Player.PlayerBrain?)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RunPlayerCountMenu
    path: src/Classes/Narrator.cs
    startLine: 841
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Menu for selecting the number of players in a match. If the player selects single player, the passed <code class="paramref">brain</code> is converted to a <code>Computer</code> brain. If the player selects two player, the passed <code class="paramref">brain</code> is converted to a <code>Human</code> brain.
  example: []
  syntax:
    content: public bool RunPlayerCountMenu(out Player.PlayerBrain? brain)
    parameters:
    - id: brain
      type: System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}
      description: The brain to modify, based on the player's selection.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the menu ran successfully and a player count was selected or the player chose to return to the title menu.<br />
            <code>false</code> if the player did not make a choice or a valid choice.
    content.vb: Public Function RunPlayerCountMenu(brain As Player.PlayerBrain?) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu*
  nameWithType.vb: Narrator.RunPlayerCountMenu(Player.PlayerBrain?)
  fullName.vb: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu(DuelingDuelsters.Classes.Player.PlayerBrain?)
  name.vb: RunPlayerCountMenu(PlayerBrain?)
- uid: DuelingDuelsters.Classes.Narrator.RunHelpScreen
  commentId: M:DuelingDuelsters.Classes.Narrator.RunHelpScreen
  id: RunHelpScreen
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RunHelpScreen()
  nameWithType: Narrator.RunHelpScreen()
  fullName: DuelingDuelsters.Classes.Narrator.RunHelpScreen()
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RunHelpScreen
    path: src/Classes/Narrator.cs
    startLine: 891
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Draws a help screen. The help screen's content depends on the current <xref href="DuelingDuelsters.Classes.GameLoop.GameState?text=GameState" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool RunHelpScreen()
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player chose to exit the help screen. The player is returned to the menu they opened the help screen from.<br />
            <code>false</code> while the help screen is running and the player has not entered a valid key.
    content.vb: Public Function RunHelpScreen() As Boolean
  overload: DuelingDuelsters.Classes.Narrator.RunHelpScreen*
- uid: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  id: RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: RunPlayerActionSelect(Player)
  nameWithType: Narrator.RunPlayerActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: RunPlayerActionSelect
    path: src/Classes/Narrator.cs
    startLine: 975
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: >-
    Menu for selecting an action during a round.

    <p>

    <ul><li>If the player is a human-controlled player, the <xref href="DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref> method is called.</li><li>If the player is a computer controlled player, the <xref href="DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)" data-throw-if-not-resolved="false"></xref> method is called.</li></ul>

    </p>
  example: []
  syntax:
    content: public bool RunPlayerActionSelect(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player who is selecting an action.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player selected a valid action or if the player chose to go back.<br />
            <code>false</code> if the action select menu is still running or the player did not select a valid action.
    content.vb: Public Function RunPlayerActionSelect(player As Player) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect*
- uid: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  id: HumanActionSelect(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: HumanActionSelect(Player)
  nameWithType: Narrator.HumanActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: HumanActionSelect
    path: src/Classes/Narrator.cs
    startLine: 1011
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Menu for a human player to select an action during a round. The action the player selects is set as the <xref href="DuelingDuelsters.Classes.Player.ChosenAction" data-throw-if-not-resolved="false"></xref> value for the player.
  example: []
  syntax:
    content: public bool HumanActionSelect(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The human player who is selecting an action.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player selected a valid action or if the player chose to go back.<br />
            <code>false</code> if the action select menu is still running or the player did not select a valid action.
    content.vb: Public Function HumanActionSelect(player As Player) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.HumanActionSelect*
- uid: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  id: ComputerActionSelect(DuelingDuelsters.Classes.Player)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: ComputerActionSelect(Player)
  nameWithType: Narrator.ComputerActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ComputerActionSelect
    path: src/Classes/Narrator.cs
    startLine: 1163
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Selects an action for a computer player during a round based on numbers generated by the match's <xref href="DuelingDuelsters.Classes.Match.rng?text=RNG" data-throw-if-not-resolved="false"></xref>.
  remarks: If the <code class="paramref">player</code> is a <xref href="DuelingDuelsters.Classes.Player.PlayerClass.Medic?text=Medic" data-throw-if-not-resolved="false"></xref>, they have access to the Heal action and a higher chance to heal if their health is below 50%.
  example: []
  syntax:
    content: public bool ComputerActionSelect(Player player)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The computer player who is selecting an action.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the computer player selected a valid action.<br />
            <code>false</code> if the action select menu is still running or if the computer player did not select a valid action.
    content.vb: Public Function ComputerActionSelect(player As Player) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.ComputerActionSelect*
- uid: DuelingDuelsters.Classes.Narrator.PressAnyKey
  commentId: M:DuelingDuelsters.Classes.Narrator.PressAnyKey
  id: PressAnyKey
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: PressAnyKey()
  nameWithType: Narrator.PressAnyKey()
  fullName: DuelingDuelsters.Classes.Narrator.PressAnyKey()
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: PressAnyKey
    path: src/Classes/Narrator.cs
    startLine: 1219
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Runs a "press any key to continue" dialog and waits for the user to press a key.
  example: []
  syntax:
    content: public bool PressAnyKey()
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player pressed a key.<br />
            <code>false</code> if the player did not press a key.
    content.vb: Public Function PressAnyKey() As Boolean
  overload: DuelingDuelsters.Classes.Narrator.PressAnyKey*
- uid: DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
  commentId: M:DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
  id: SelectBinary(System.String)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: SelectBinary(string)
  nameWithType: Narrator.SelectBinary(string)
  fullName: DuelingDuelsters.Classes.Narrator.SelectBinary(string)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: SelectBinary
    path: src/Classes/Narrator.cs
    startLine: 1252
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Presents the player with a binary choice (yes/no, 1/2, left/right, etc.). Also provides the option of pressing the Escape key to go back. The selected option is written to the narrator's <xref href="DuelingDuelsters.Classes.Narrator.Choice?text=Choice" data-throw-if-not-resolved="false"></xref> member.
  example: []
  syntax:
    content: public bool SelectBinary(string dialog)
    parameters:
    - id: dialog
      type: System.String
      description: Dialog to display to the player. The <code class="paramref">dialog</code> argument should also include the choices the player can select.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the player selected a valid choice (Positive, Negative, or Back).<br />
            <code>false</code> if the player did not select a valid choice.
    content.vb: Public Function SelectBinary(dialog As String) As Boolean
  overload: DuelingDuelsters.Classes.Narrator.SelectBinary*
  nameWithType.vb: Narrator.SelectBinary(String)
  fullName.vb: DuelingDuelsters.Classes.Narrator.SelectBinary(String)
  name.vb: SelectBinary(String)
- uid: DuelingDuelsters.Classes.Narrator.DrawArena
  commentId: M:DuelingDuelsters.Classes.Narrator.DrawArena
  id: DrawArena
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: DrawArena()
  nameWithType: Narrator.DrawArena()
  fullName: DuelingDuelsters.Classes.Narrator.DrawArena()
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: DrawArena
    path: src/Classes/Narrator.cs
    startLine: 1300
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Draws an ASCII image of a gladatorial arena entrance from a file.
  remarks: This method is run at the end of character creation to welcome the new character to the arena.
  example: []
  syntax:
    content: public string DrawArena()
    return:
      type: System.String
      description: The foreboding entrance to the new character's chance at glorious victory or death-inducing defeat.
    content.vb: Public Function DrawArena() As String
  overload: DuelingDuelsters.Classes.Narrator.DrawArena*
- uid: DuelingDuelsters.Classes.Narrator.ReadLineWithCancel
  commentId: M:DuelingDuelsters.Classes.Narrator.ReadLineWithCancel
  id: ReadLineWithCancel
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: ReadLineWithCancel()
  nameWithType: Narrator.ReadLineWithCancel()
  fullName: DuelingDuelsters.Classes.Narrator.ReadLineWithCancel()
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: ReadLineWithCancel
    path: src/Classes/Narrator.cs
    startLine: 1337
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Custom implementation of <code>Console.ReadLine()</code> that allows the player to press the Escape key to back out of text entry.
  remarks: This method is called during character creation to allow the player to return to the previous menu while entering a name for their character.
  example: []
  syntax:
    content: private string? ReadLineWithCancel()
    return:
      type: System.String
      description: The text the user entered into the console.
    content.vb: Private Function ReadLineWithCancel() As String
  overload: DuelingDuelsters.Classes.Narrator.ReadLineWithCancel*
- uid: DuelingDuelsters.Classes.Narrator.UndoActionSelection(DuelingDuelsters.Classes.Player,System.Boolean@)
  commentId: M:DuelingDuelsters.Classes.Narrator.UndoActionSelection(DuelingDuelsters.Classes.Player,System.Boolean@)
  id: UndoActionSelection(DuelingDuelsters.Classes.Player,System.Boolean@)
  parent: DuelingDuelsters.Classes.Narrator
  langs:
  - csharp
  - vb
  name: UndoActionSelection(Player, out bool)
  nameWithType: Narrator.UndoActionSelection(Player, out bool)
  fullName: DuelingDuelsters.Classes.Narrator.UndoActionSelection(DuelingDuelsters.Classes.Player, out bool)
  type: Method
  source:
    remote:
      path: src/Classes/Narrator.cs
      branch: documentation
      repo: https://github.com/PolyrhythmicDrop/DuelingDuelsters.git
    id: UndoActionSelection
    path: src/Classes/Narrator.cs
    startLine: 1372
  assemblies:
  - DuelingDuelsters
  namespace: DuelingDuelsters.Classes
  summary: Resets the passed player's action variables and sets the narrator's <xref href="DuelingDuelsters.Classes.Narrator.Choice?text=Choice" data-throw-if-not-resolved="false"></xref> member to <xref href="DuelingDuelsters.Classes.Narrator.Choices.Back?text=Back" data-throw-if-not-resolved="false"></xref>.
  remarks: This method is called during action selection if the player chooses to undo their current action selection.
  example: []
  syntax:
    content: private void UndoActionSelection(Player player, out bool success)
    parameters:
    - id: player
      type: DuelingDuelsters.Classes.Player
      description: The player whose action variables are reset.
    - id: success
      type: System.Boolean
      description: The <code>success</code> parameter for the action selection menu. This method sets <code class="paramref">success</code> to <code>true</code> to break out of the action select loop and return to the previous menu.
    content.vb: Private Sub UndoActionSelection(player As Player, success As Boolean)
  overload: DuelingDuelsters.Classes.Narrator.UndoActionSelection*
  nameWithType.vb: Narrator.UndoActionSelection(Player, Boolean)
  fullName.vb: DuelingDuelsters.Classes.Narrator.UndoActionSelection(DuelingDuelsters.Classes.Player, Boolean)
  name.vb: UndoActionSelection(Player, Boolean)
references:
- uid: DuelingDuelsters.Classes.Match.Outcome
  commentId: T:DuelingDuelsters.Classes.Match.Outcome
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Match.html
  name: Match.Outcome
  nameWithType: Match.Outcome
  fullName: DuelingDuelsters.Classes.Match.Outcome
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Match
    name: Match
    href: DuelingDuelsters.Classes.Match.html
  - name: .
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
- uid: DuelingDuelsters.Classes.Narrator.Choices
  commentId: T:DuelingDuelsters.Classes.Narrator.Choices
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Narrator.html
  name: Narrator.Choices
  nameWithType: Narrator.Choices
  fullName: DuelingDuelsters.Classes.Narrator.Choices
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator
    name: Narrator
    href: DuelingDuelsters.Classes.Narrator.html
  - name: .
  - uid: DuelingDuelsters.Classes.Narrator.Choices
    name: Choices
    href: DuelingDuelsters.Classes.Narrator.Choices.html
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator
    name: Narrator
    href: DuelingDuelsters.Classes.Narrator.html
  - name: .
  - uid: DuelingDuelsters.Classes.Narrator.Choices
    name: Choices
    href: DuelingDuelsters.Classes.Narrator.Choices.html
- uid: DuelingDuelsters.Classes.Narrator.Choices.Back
  commentId: F:DuelingDuelsters.Classes.Narrator.Choices.Back
  href: DuelingDuelsters.Classes.Narrator.Choices.html#DuelingDuelsters_Classes_Narrator_Choices_Back
  name: Back
  nameWithType: Narrator.Choices.Back
  fullName: DuelingDuelsters.Classes.Narrator.Choices.Back
- uid: DuelingDuelsters.Classes
  commentId: N:DuelingDuelsters.Classes
  href: DuelingDuelsters.html
  name: DuelingDuelsters.Classes
  nameWithType: DuelingDuelsters.Classes
  fullName: DuelingDuelsters.Classes
  spec.csharp:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
  spec.vb:
  - uid: DuelingDuelsters
    name: DuelingDuelsters
    href: DuelingDuelsters.html
  - name: .
  - uid: DuelingDuelsters.Classes
    name: Classes
    href: DuelingDuelsters.Classes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DuelingDuelsters.Classes.Narrator.KeyInfo*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.KeyInfo
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_KeyInfo
  name: KeyInfo
  nameWithType: Narrator.KeyInfo
  fullName: DuelingDuelsters.Classes.Narrator.KeyInfo
- uid: System.ConsoleKeyInfo
  commentId: T:System.ConsoleKeyInfo
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.consolekeyinfo
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: DuelingDuelsters.Classes.Narrator.Key*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.Key
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_Key
  name: Key
  nameWithType: Narrator.Key
  fullName: DuelingDuelsters.Classes.Narrator.Key
- uid: System.ConsoleKey
  commentId: T:System.ConsoleKey
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.consolekey
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DuelingDuelsters.Classes.Player.ChosenAction
  commentId: P:DuelingDuelsters.Classes.Player.ChosenAction
  href: DuelingDuelsters.Classes.Player.html#DuelingDuelsters_Classes_Player_ChosenAction
  name: ChosenAction
  nameWithType: Player.ChosenAction
  fullName: DuelingDuelsters.Classes.Player.ChosenAction
- uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  commentId: M:DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
  isExternal: true
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  name: GetOutcomeNarration(Outcome, string, string)
  nameWithType: Narrator.GetOutcomeNarration(Match.Outcome, string, string)
  fullName: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, string, string)
  nameWithType.vb: Narrator.GetOutcomeNarration(Match.Outcome, String, String)
  fullName.vb: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome, String, String)
  name.vb: GetOutcomeNarration(Outcome, String, String)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
    name: GetOutcomeNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration(DuelingDuelsters.Classes.Match.Outcome,System.String,System.String)
    name: GetOutcomeNarration
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  - name: (
  - uid: DuelingDuelsters.Classes.Match.Outcome
    name: Outcome
    href: DuelingDuelsters.Classes.Match.Outcome.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullreferenceexception
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetPlayerActionNarration_DuelingDuelsters_Classes_Player_
  name: GetPlayerActionNarration
  nameWithType: Narrator.GetPlayerActionNarration
  fullName: DuelingDuelsters.Classes.Narrator.GetPlayerActionNarration
- uid: DuelingDuelsters.Classes.Player
  commentId: T:DuelingDuelsters.Classes.Player
  parent: DuelingDuelsters.Classes
  href: DuelingDuelsters.Classes.Player.html
  name: Player
  nameWithType: Player
  fullName: DuelingDuelsters.Classes.Player
- uid: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.GetOutcomeNarration
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_GetOutcomeNarration_DuelingDuelsters_Classes_Match_Outcome_System_String_System_String_
  name: GetOutcomeNarration
  nameWithType: Narrator.GetOutcomeNarration
  fullName: DuelingDuelsters.Classes.Narrator.GetOutcomeNarration
- uid: DuelingDuelsters.Classes.Narrator.RunTitleMenu*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RunTitleMenu
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunTitleMenu
  name: RunTitleMenu
  nameWithType: Narrator.RunTitleMenu
  fullName: DuelingDuelsters.Classes.Narrator.RunTitleMenu
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerName_DuelingDuelsters_Classes_Player_
  name: SetPlayerName(Player)
  nameWithType: Narrator.SetPlayerName(Player)
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
    name: SetPlayerName
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerName_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.SetPlayerName(DuelingDuelsters.Classes.Player)
    name: SetPlayerName
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerName_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerClass_DuelingDuelsters_Classes_Player_
  name: SetPlayerClass(Player)
  nameWithType: Narrator.SetPlayerClass(Player)
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
    name: SetPlayerClass
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerClass_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.SetPlayerClass(DuelingDuelsters.Classes.Player)
    name: SetPlayerClass
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerClass_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
  commentId: M:DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
  isExternal: true
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SelectBinary_System_String_
  name: SelectBinary(string)
  nameWithType: Narrator.SelectBinary(string)
  fullName: DuelingDuelsters.Classes.Narrator.SelectBinary(string)
  nameWithType.vb: Narrator.SelectBinary(String)
  fullName.vb: DuelingDuelsters.Classes.Narrator.SelectBinary(String)
  name.vb: SelectBinary(String)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
    name: SelectBinary
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SelectBinary_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.SelectBinary(System.String)
    name: SelectBinary
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SelectBinary_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.RunCharacterCreation*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RunCharacterCreation
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunCharacterCreation_DuelingDuelsters_Classes_Player_System_Int32_
  name: RunCharacterCreation
  nameWithType: Narrator.RunCharacterCreation
  fullName: DuelingDuelsters.Classes.Narrator.RunCharacterCreation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerName*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.SetPlayerName
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerName_DuelingDuelsters_Classes_Player_
  name: SetPlayerName
  nameWithType: Narrator.SetPlayerName
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerName
- uid: DuelingDuelsters.Classes.Narrator.SetPlayerClass*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.SetPlayerClass
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SetPlayerClass_DuelingDuelsters_Classes_Player_
  name: SetPlayerClass
  nameWithType: Narrator.SetPlayerClass
  fullName: DuelingDuelsters.Classes.Narrator.SetPlayerClass
- uid: DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RandomSetPlayerClass_DuelingDuelsters_Classes_Player_
  name: RandomSetPlayerClass
  nameWithType: Narrator.RandomSetPlayerClass
  fullName: DuelingDuelsters.Classes.Narrator.RandomSetPlayerClass
- uid: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunPlayerCountMenu_System_Nullable_DuelingDuelsters_Classes_Player_PlayerBrain___
  name: RunPlayerCountMenu
  nameWithType: Narrator.RunPlayerCountMenu
  fullName: DuelingDuelsters.Classes.Narrator.RunPlayerCountMenu
- uid: System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}
  commentId: T:System.Nullable{DuelingDuelsters.Classes.Player.PlayerBrain}
  parent: System
  definition: System.Nullable`1
  href: DuelingDuelsters.Classes.Player.html
  name: Player.PlayerBrain?
  nameWithType: Player.PlayerBrain?
  fullName: DuelingDuelsters.Classes.Player.PlayerBrain?
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerBrain
    name: PlayerBrain
    href: DuelingDuelsters.Classes.Player.PlayerBrain.html
  - name: '?'
  spec.vb:
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: .
  - uid: DuelingDuelsters.Classes.Player.PlayerBrain
    name: PlayerBrain
    href: DuelingDuelsters.Classes.Player.PlayerBrain.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DuelingDuelsters.Classes.GameLoop.GameState
  commentId: F:DuelingDuelsters.Classes.GameLoop.GameState
  href: DuelingDuelsters.Classes.GameLoop.html#DuelingDuelsters_Classes_GameLoop_GameState
  name: GameState
  nameWithType: GameLoop.GameState
  fullName: DuelingDuelsters.Classes.GameLoop.GameState
- uid: DuelingDuelsters.Classes.Narrator.RunHelpScreen*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RunHelpScreen
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunHelpScreen
  name: RunHelpScreen
  nameWithType: Narrator.RunHelpScreen
  fullName: DuelingDuelsters.Classes.Narrator.RunHelpScreen
- uid: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_HumanActionSelect_DuelingDuelsters_Classes_Player_
  name: HumanActionSelect(Player)
  nameWithType: Narrator.HumanActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
    name: HumanActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_HumanActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.HumanActionSelect(DuelingDuelsters.Classes.Player)
    name: HumanActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_HumanActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  commentId: M:DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_ComputerActionSelect_DuelingDuelsters_Classes_Player_
  name: ComputerActionSelect(Player)
  nameWithType: Narrator.ComputerActionSelect(Player)
  fullName: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
  spec.csharp:
  - uid: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
    name: ComputerActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_ComputerActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
  spec.vb:
  - uid: DuelingDuelsters.Classes.Narrator.ComputerActionSelect(DuelingDuelsters.Classes.Player)
    name: ComputerActionSelect
    href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_ComputerActionSelect_DuelingDuelsters_Classes_Player_
  - name: (
  - uid: DuelingDuelsters.Classes.Player
    name: Player
    href: DuelingDuelsters.Classes.Player.html
  - name: )
- uid: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_RunPlayerActionSelect_DuelingDuelsters_Classes_Player_
  name: RunPlayerActionSelect
  nameWithType: Narrator.RunPlayerActionSelect
  fullName: DuelingDuelsters.Classes.Narrator.RunPlayerActionSelect
- uid: DuelingDuelsters.Classes.Narrator.HumanActionSelect*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.HumanActionSelect
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_HumanActionSelect_DuelingDuelsters_Classes_Player_
  name: HumanActionSelect
  nameWithType: Narrator.HumanActionSelect
  fullName: DuelingDuelsters.Classes.Narrator.HumanActionSelect
- uid: DuelingDuelsters.Classes.Match.rng
  commentId: F:DuelingDuelsters.Classes.Match.rng
  href: DuelingDuelsters.Classes.Match.html#DuelingDuelsters_Classes_Match_rng
  name: rng
  nameWithType: Match.rng
  fullName: DuelingDuelsters.Classes.Match.rng
- uid: DuelingDuelsters.Classes.Player.PlayerClass.Medic
  commentId: F:DuelingDuelsters.Classes.Player.PlayerClass.Medic
  href: DuelingDuelsters.Classes.Player.PlayerClass.html#DuelingDuelsters_Classes_Player_PlayerClass_Medic
  name: Medic
  nameWithType: Player.PlayerClass.Medic
  fullName: DuelingDuelsters.Classes.Player.PlayerClass.Medic
- uid: DuelingDuelsters.Classes.Narrator.ComputerActionSelect*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.ComputerActionSelect
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_ComputerActionSelect_DuelingDuelsters_Classes_Player_
  name: ComputerActionSelect
  nameWithType: Narrator.ComputerActionSelect
  fullName: DuelingDuelsters.Classes.Narrator.ComputerActionSelect
- uid: DuelingDuelsters.Classes.Narrator.PressAnyKey*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.PressAnyKey
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_PressAnyKey
  name: PressAnyKey
  nameWithType: Narrator.PressAnyKey
  fullName: DuelingDuelsters.Classes.Narrator.PressAnyKey
- uid: DuelingDuelsters.Classes.Narrator.Choice
  commentId: F:DuelingDuelsters.Classes.Narrator.Choice
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_Choice
  name: Choice
  nameWithType: Narrator.Choice
  fullName: DuelingDuelsters.Classes.Narrator.Choice
- uid: DuelingDuelsters.Classes.Narrator.SelectBinary*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.SelectBinary
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_SelectBinary_System_String_
  name: SelectBinary
  nameWithType: Narrator.SelectBinary
  fullName: DuelingDuelsters.Classes.Narrator.SelectBinary
- uid: DuelingDuelsters.Classes.Narrator.DrawArena*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.DrawArena
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_DrawArena
  name: DrawArena
  nameWithType: Narrator.DrawArena
  fullName: DuelingDuelsters.Classes.Narrator.DrawArena
- uid: DuelingDuelsters.Classes.Narrator.ReadLineWithCancel*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.ReadLineWithCancel
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_ReadLineWithCancel
  name: ReadLineWithCancel
  nameWithType: Narrator.ReadLineWithCancel
  fullName: DuelingDuelsters.Classes.Narrator.ReadLineWithCancel
- uid: DuelingDuelsters.Classes.Narrator.UndoActionSelection*
  commentId: Overload:DuelingDuelsters.Classes.Narrator.UndoActionSelection
  href: DuelingDuelsters.Classes.Narrator.html#DuelingDuelsters_Classes_Narrator_UndoActionSelection_DuelingDuelsters_Classes_Player_System_Boolean__
  name: UndoActionSelection
  nameWithType: Narrator.UndoActionSelection
  fullName: DuelingDuelsters.Classes.Narrator.UndoActionSelection
